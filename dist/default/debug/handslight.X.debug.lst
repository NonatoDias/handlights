

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 10 12:23:34 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45  0000                     
    46                           ; Version 1.45
    47                           ; Generated 16/11/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4550 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMRAM
    82  007008                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _color_pages_
    86  007008  06                 	db	6
    87  007009  00                 	db	0
    88  00700A  01                 	db	1
    89  00700B  02                 	db	2
    90  00700C  03                 	db	3
    91  00700D  04                 	db	4
    92  00700E  05                 	db	5
    93  00700F  00                 	db	0
    94                           
    95                           ;initializer for __last_z
    96  007010  FF                 	db	255
    97                           
    98                           ;initializer for __last_x
    99  007011  FF                 	db	255
   100  0000                     _LATE	set	3981
   101  0000                     _TRISD	set	3989
   102  0000                     _LATD	set	3980
   103  0000                     _TRISB	set	3987
   104  0000                     _LATB	set	3978
   105  0000                     _TRISA	set	3986
   106  0000                     _LATA	set	3977
   107  0000                     _TRISCbits	set	3988
   108  0000                     _LATAbits	set	3977
   109  0000                     _TRISC6	set	31910
   110  0000                     _TRISC7	set	31911
   111  0000                     _TRISC2	set	31906
   112  0000                     _TXREG	set	4013
   113  0000                     _RCREG	set	4014
   114  0000                     _SPBRG	set	4015
   115  0000                     _CMCON	set	4020
   116  0000                     _ADCON1	set	4033
   117  0000                     _RCON	set	4048
   118  0000                     _T2CONbits	set	4042
   119  0000                     _TMR2	set	4044
   120  0000                     _CCP1CON	set	4029
   121  0000                     _T2CON	set	4042
   122  0000                     _CCPR1L	set	4030
   123  0000                     _PR2	set	4043
   124  0000                     _TRMT	set	32097
   125  0000                     _RCIF	set	31989
   126  0000                     _TXEN	set	32101
   127  0000                     _CREN	set	32092
   128  0000                     _SPEN	set	32095
   129  0000                     _SYNC	set	32100
   130  0000                     _BRG16	set	32195
   131  0000                     _BRGH	set	32098
   132  0000                     _T0CON	set	4053
   133                           
   134                           ; #config settings
   135  0000                     
   136                           	psect	cinit
   137  007118                     __pcinit:
   138                           	opt stack 0
   139  007118                     start_initialization:
   140                           	opt stack 0
   141  007118                     __initialization:
   142                           	opt stack 0
   143                           
   144                           ; Initialize objects allocated to COMRAM (10 bytes)
   145                           ; load TBLPTR registers with __pidataCOMRAM
   146  007118  0E08               	movlw	low __pidataCOMRAM
   147  00711A  6EF6               	movwf	tblptrl,c
   148  00711C  0E70               	movlw	high __pidataCOMRAM
   149  00711E  6EF7               	movwf	tblptrh,c
   150  007120  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   151  007122  6EF8               	movwf	tblptru,c
   152  007124  EE00  F04C         	lfsr	0,__pdataCOMRAM
   153  007128  EE10 F00A          	lfsr	1,10
   154  00712C                     copy_data0:
   155  00712C  0009               	tblrd		*+
   156  00712E  CFF5 FFEE          	movff	tablat,postinc0
   157  007132  50E5               	movf	postdec1,w,c
   158  007134  50E1               	movf	fsr1l,w,c
   159  007136  E1FA               	bnz	copy_data0
   160                           
   161                           ; Clear objects allocated to COMRAM (7 bytes)
   162  007138  EE00  F056         	lfsr	0,__pbssCOMRAM
   163  00713C  0E07               	movlw	7
   164  00713E                     clear_0:
   165  00713E  6AEE               	clrf	postinc0,c
   166  007140  06E8               	decf	wreg,f,c
   167  007142  E1FD               	bnz	clear_0
   168  007144                     end_of_initialization:
   169                           	opt stack 0
   170  007144                     __end_of__initialization:
   171                           	opt stack 0
   172  007144  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173  007146  6EF8               	movwf	tblptru,c
   174  007148  0100               	movlb	0
   175  00714A  EF29  F039         	goto	_main	;jump to C main() function
   176                           tblptru	equ	0xFF8
   177                           tblptrh	equ	0xFF7
   178                           tblptrl	equ	0xFF6
   179                           tablat	equ	0xFF5
   180                           postinc0	equ	0xFEE
   181                           wreg	equ	0xFE8
   182                           postdec1	equ	0xFE5
   183                           fsr1l	equ	0xFE1
   184                           
   185                           	psect	bssCOMRAM
   186  000056                     __pbssCOMRAM:
   187                           	opt stack 0
   188  000056                     _errno:
   189                           	opt stack 0
   190  000056                     	ds	2
   191  000058                     _index_color_:
   192                           	opt stack 0
   193  000058                     	ds	2
   194  00005A                     _msg:
   195                           	opt stack 0
   196  00005A                     	ds	1
   197  00005B                     __pwm_count:
   198                           	opt stack 0
   199  00005B                     	ds	2
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           postdec1	equ	0xFE5
   207                           fsr1l	equ	0xFE1
   208                           
   209                           	psect	dataCOMRAM
   210  00004C                     __pdataCOMRAM:
   211                           	opt stack 0
   212  00004C                     _color_pages_:
   213                           	opt stack 0
   214  00004C                     	ds	8
   215  000054                     __last_z:
   216                           	opt stack 0
   217  000054                     	ds	1
   218  000055                     __last_x:
   219                           	opt stack 0
   220  000055                     	ds	1
   221                           tblptru	equ	0xFF8
   222                           tblptrh	equ	0xFF7
   223                           tblptrl	equ	0xFF6
   224                           tablat	equ	0xFF5
   225                           postinc0	equ	0xFEE
   226                           wreg	equ	0xFE8
   227                           postdec1	equ	0xFE5
   228                           fsr1l	equ	0xFE1
   229                           
   230                           	psect	cstackBANK0
   231  000060                     __pcstackBANK0:
   232                           	opt stack 0
   233  000060                     main@x:
   234                           	opt stack 0
   235                           
   236                           ; 2 bytes @ 0x0
   237  000060                     	ds	2
   238  000062                     main@valid_z:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x2
   242  000062                     	ds	2
   243  000064                     main@rate_z:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x4
   247  000064                     	ds	2
   248  000066                     _main$261:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x6
   252  000066                     	ds	2
   253  000068                     main@count_z:
   254                           	opt stack 0
   255                           
   256                           ; 2 bytes @ 0x8
   257  000068                     	ds	2
   258  00006A                     main@isLightON:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0xA
   262  00006A                     	ds	1
   263  00006B                     main@z:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0xB
   267  00006B                     	ds	2
   268  00006D                     main@substate_toggle:
   269                           	opt stack 0
   270                           
   271                           ; 2 bytes @ 0xD
   272  00006D                     	ds	2
   273  00006F                     main@data_2:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0xF
   277  00006F                     	ds	2
   278  000071                     main@gesture:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x11
   282  000071                     	ds	1
   283  000072                     main@count_tchau:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x12
   287  000072                     	ds	2
   288  000074                     main@data_1:
   289                           	opt stack 0
   290                           
   291                           ; 2 bytes @ 0x14
   292  000074                     	ds	2
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           postdec1	equ	0xFE5
   300                           fsr1l	equ	0xFE1
   301                           
   302                           	psect	cstackCOMRAM
   303  000001                     __pcstackCOMRAM:
   304                           	opt stack 0
   305  000001                     ?_anyGestureAvailable:
   306                           	opt stack 0
   307  000001                     ?_abs:
   308                           	opt stack 0
   309  000001                     ?_getLastZ:
   310                           	opt stack 0
   311  000001                     ?_getLastX:
   312                           	opt stack 0
   313  000001                     ?___wmul:
   314                           	opt stack 0
   315  000001                     ?___ftpack:
   316                           	opt stack 0
   317  000001                     led_control@ledCor:
   318                           	opt stack 0
   319  000001                     UART_Write@data:
   320                           	opt stack 0
   321  000001                     anyGestureAvailable@gesture:
   322                           	opt stack 0
   323  000001                     ___wmul@multiplier:
   324                           	opt stack 0
   325  000001                     abs@a:
   326                           	opt stack 0
   327  000001                     ___ftpack@arg:
   328                           	opt stack 0
   329  000001                     frexp@value:
   330                           	opt stack 0
   331  000001                     ___ftge@ff1:
   332                           	opt stack 0
   333                           
   334                           ; 3 bytes @ 0x0
   335  000001                     	ds	1
   336  000002                     ledBlink@c:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x1
   340  000002                     	ds	1
   341  000003                     ??_abs:
   342  000003                     anyGestureAvailable@data1:
   343                           	opt stack 0
   344  000003                     ___wmul@multiplicand:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x2
   348  000003                     	ds	1
   349  000004                     ___ftpack@exp:
   350                           	opt stack 0
   351  000004                     ledBlink@d:
   352                           	opt stack 0
   353  000004                     frexp@eptr:
   354                           	opt stack 0
   355  000004                     ___ftge@ff2:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0x3
   359  000004                     	ds	1
   360  000005                     ___ftpack@sign:
   361                           	opt stack 0
   362  000005                     anyGestureAvailable@data2:
   363                           	opt stack 0
   364  000005                     ___wmul@product:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x4
   368  000005                     	ds	1
   369  000006                     ??___ftpack:
   370  000006                     ??_frexp:
   371                           
   372                           ; 1 bytes @ 0x5
   373  000006                     	ds	1
   374  000007                     ??_anyGestureAvailable:
   375  000007                     ??___ftge:
   376  000007                     ?___awdiv:
   377                           	opt stack 0
   378  000007                     ___awdiv@dividend:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x6
   382  000007                     	ds	2
   383  000009                     _anyGestureAvailable$296:
   384                           	opt stack 0
   385  000009                     ___awdiv@divisor:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x8
   389  000009                     	ds	2
   390  00000B                     ___awdiv@counter:
   391                           	opt stack 0
   392  00000B                     _anyGestureAvailable$297:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0xA
   396  00000B                     	ds	1
   397  00000C                     ___awdiv@sign:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0xB
   401  00000C                     	ds	1
   402  00000D                     ___awdiv@quotient:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0xC
   406  00000D                     	ds	2
   407  00000F                     ?___awtoft:
   408                           	opt stack 0
   409  00000F                     ___awtoft@c:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0xE
   413  00000F                     	ds	3
   414  000012                     ___awtoft@sign:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x11
   418  000012                     	ds	1
   419  000013                     ?___ftadd:
   420                           	opt stack 0
   421  000013                     ___ftadd@f1:
   422                           	opt stack 0
   423                           
   424                           ; 3 bytes @ 0x12
   425  000013                     	ds	3
   426  000016                     ___ftadd@f2:
   427                           	opt stack 0
   428                           
   429                           ; 3 bytes @ 0x15
   430  000016                     	ds	3
   431  000019                     ??___ftadd:
   432                           
   433                           ; 1 bytes @ 0x18
   434  000019                     	ds	3
   435  00001C                     ___ftadd@sign:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x1B
   439  00001C                     	ds	1
   440  00001D                     ___ftadd@exp2:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x1C
   444  00001D                     	ds	1
   445  00001E                     ___ftadd@exp1:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x1D
   449  00001E                     	ds	1
   450  00001F                     ?___fttol:
   451                           	opt stack 0
   452  00001F                     ___fttol@f1:
   453                           	opt stack 0
   454                           
   455                           ; 3 bytes @ 0x1E
   456  00001F                     	ds	4
   457  000023                     ??___fttol:
   458                           
   459                           ; 1 bytes @ 0x22
   460  000023                     	ds	5
   461  000028                     ___fttol@sign1:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x27
   465  000028                     	ds	1
   466  000029                     ___fttol@lval:
   467                           	opt stack 0
   468                           
   469                           ; 4 bytes @ 0x28
   470  000029                     	ds	4
   471  00002D                     ___fttol@exp1:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x2C
   475  00002D                     	ds	1
   476  00002E                     ?___altoft:
   477                           	opt stack 0
   478  00002E                     ___altoft@c:
   479                           	opt stack 0
   480                           
   481                           ; 4 bytes @ 0x2D
   482  00002E                     	ds	4
   483  000032                     ??___altoft:
   484                           
   485                           ; 1 bytes @ 0x31
   486  000032                     	ds	4
   487  000036                     ___altoft@exp:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x35
   491  000036                     	ds	1
   492  000037                     ___altoft@sign:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x36
   496  000037                     	ds	1
   497  000038                     ?_ceil:
   498                           	opt stack 0
   499  000038                     ceil@x:
   500                           	opt stack 0
   501                           
   502                           ; 3 bytes @ 0x37
   503  000038                     	ds	3
   504  00003B                     ceil@i:
   505                           	opt stack 0
   506                           
   507                           ; 3 bytes @ 0x3A
   508  00003B                     	ds	3
   509  00003E                     ceil@expon:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x3D
   513  00003E                     	ds	2
   514  000040                     ?___ftneg:
   515                           	opt stack 0
   516  000040                     ___ftneg@f1:
   517                           	opt stack 0
   518                           
   519                           ; 3 bytes @ 0x3F
   520  000040                     	ds	3
   521  000043                     _increasePWM$916:
   522                           	opt stack 0
   523  000043                     _decreasePWM$917:
   524                           	opt stack 0
   525                           
   526                           ; 3 bytes @ 0x42
   527  000043                     	ds	3
   528  000046                     _increasePWM$187:
   529                           	opt stack 0
   530  000046                     _decreasePWM$190:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x45
   534  000046                     	ds	2
   535  000048                     increasePWM@val:
   536                           	opt stack 0
   537  000048                     decreasePWM@val:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x47
   541  000048                     	ds	2
   542  00004A                     ??_main:
   543                           
   544                           ; 1 bytes @ 0x49
   545  00004A                     	ds	2
   546                           tblptru	equ	0xFF8
   547                           tblptrh	equ	0xFF7
   548                           tblptrl	equ	0xFF6
   549                           tablat	equ	0xFF5
   550                           postinc0	equ	0xFEE
   551                           wreg	equ	0xFE8
   552                           postdec1	equ	0xFE5
   553                           fsr1l	equ	0xFE1
   554                           
   555 ;;
   556 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   557 ;;
   558 ;; *************** function _main *****************
   559 ;; Defined at:
   560 ;;		line 38 in file "main.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;  data_1          2   20[BANK0 ] int 
   565 ;;  count_tchau     2   18[BANK0 ] int 
   566 ;;  data_2          2   15[BANK0 ] int 
   567 ;;  substate_tog    2   13[BANK0 ] int 
   568 ;;  z               2   11[BANK0 ] int 
   569 ;;  count_z         2    8[BANK0 ] int 
   570 ;;  rate_z          2    4[BANK0 ] int 
   571 ;;  valid_z         2    2[BANK0 ] int 
   572 ;;  x               2    0[BANK0 ] int 
   573 ;;  gesture         1   17[BANK0 ] unsigned char 
   574 ;;  isLightON       1   10[BANK0 ] unsigned char 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   584 ;;      Params:         0       0       0       0       0       0       0       0       0
   585 ;;      Locals:         0      22       0       0       0       0       0       0       0
   586 ;;      Temps:          2       0       0       0       0       0       0       0       0
   587 ;;      Totals:         2      22       0       0       0       0       0       0       0
   588 ;;Total ram usage:       24 bytes
   589 ;; Hardware stack levels required when called:    4
   590 ;; This function calls:
   591 ;;		_AFSmartBoard_Init
   592 ;;		_UART_Write
   593 ;;		_abs
   594 ;;		_anyGestureAvailable
   595 ;;		_decreasePWM
   596 ;;		_getLastX
   597 ;;		_getLastZ
   598 ;;		_increasePWM
   599 ;;		_init_XZ_Gesture
   600 ;;		_init_ledRGB
   601 ;;		_ledBlink
   602 ;;		_ledOFF
   603 ;;		_ledON
   604 ;;		_nextPage
   605 ;;		_prevPage
   606 ;; This function is called by:
   607 ;;		Startup code after reset
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text0
   612  007252                     __ptext0:
   613                           	opt stack 0
   614  007252                     _main:
   615                           	opt stack 27
   616                           
   617                           ;main.c: 40: char isLightON = 0;
   618                           
   619                           ;incstack = 0
   620  007252  0E00               	movlw	0
   621  007254  0100               	movlb	0	; () banked
   622  007256  6F6A               	movwf	main@isLightON& (0+255),b
   623                           
   624                           ;main.c: 43: int x = 0xFF;
   625  007258  0E00               	movlw	0
   626  00725A  6F61               	movwf	(main@x+1)& (0+255),b
   627  00725C  6960               	setf	main@x& (0+255),b
   628                           
   629                           ;main.c: 44: int z = 0xFF;
   630  00725E  0E00               	movlw	0
   631  007260  6F6C               	movwf	(main@z+1)& (0+255),b
   632  007262  696B               	setf	main@z& (0+255),b
   633                           
   634                           ;main.c: 47: int valid_z = 0;
   635  007264  0E00               	movlw	0
   636  007266  6F63               	movwf	(main@valid_z+1)& (0+255),b
   637  007268  0E00               	movlw	0
   638  00726A  6F62               	movwf	main@valid_z& (0+255),b
   639                           
   640                           ;main.c: 48: int rate_z = 0;
   641  00726C  0E00               	movlw	0
   642  00726E  6F65               	movwf	(main@rate_z+1)& (0+255),b
   643  007270  0E00               	movlw	0
   644  007272  6F64               	movwf	main@rate_z& (0+255),b
   645                           
   646                           ;main.c: 49: int count_z = 0;
   647  007274  0E00               	movlw	0
   648  007276  6F69               	movwf	(main@count_z+1)& (0+255),b
   649  007278  0E00               	movlw	0
   650  00727A  6F68               	movwf	main@count_z& (0+255),b
   651                           
   652                           ;main.c: 52: int count_tchau = 0;
   653  00727C  0E00               	movlw	0
   654  00727E  6F73               	movwf	(main@count_tchau+1)& (0+255),b
   655  007280  0E00               	movlw	0
   656  007282  6F72               	movwf	main@count_tchau& (0+255),b
   657                           
   658                           ;main.c: 55: uint8_t gesture = 0;
   659  007284  0E00               	movlw	0
   660  007286  6F71               	movwf	main@gesture& (0+255),b
   661                           
   662                           ;main.c: 56: int data_1 = 0;
   663  007288  0E00               	movlw	0
   664  00728A  6F75               	movwf	(main@data_1+1)& (0+255),b
   665  00728C  0E00               	movlw	0
   666  00728E  6F74               	movwf	main@data_1& (0+255),b
   667                           
   668                           ;main.c: 57: int data_2 = 0;
   669  007290  0E00               	movlw	0
   670  007292  6F70               	movwf	(main@data_2+1)& (0+255),b
   671  007294  0E00               	movlw	0
   672  007296  6F6F               	movwf	main@data_2& (0+255),b
   673                           
   674                           ;main.c: 59: int substate_toggle = 1;
   675  007298  0E00               	movlw	0
   676  00729A  6F6E               	movwf	(main@substate_toggle+1)& (0+255),b
   677  00729C  0E01               	movlw	1
   678  00729E  6F6D               	movwf	main@substate_toggle& (0+255),b
   679                           
   680                           ; BSR set to: 0
   681                           ;main.c: 61: AFSmartBoard_Init();
   682  0072A0  EC75  F038         	call	_AFSmartBoard_Init	;wreg free
   683                           
   684                           ;main.c: 62: init_ledRGB();
   685  0072A4  EC0F  F038         	call	_init_ledRGB	;wreg free
   686                           
   687                           ;main.c: 63: init_XZ_Gesture();
   688  0072A8  ECED  F037         	call	_init_XZ_Gesture	;wreg free
   689  0072AC                     
   690                           ;main.c: 67: ledBlink();
   691  0072AC  ECFC  F038         	call	_ledBlink	;wreg free
   692  0072B0  D7FD               	goto	l156
   693  0072B2                     __end_of_main:
   694                           	opt stack 0
   695                           tblptru	equ	0xFF8
   696                           tblptrh	equ	0xFF7
   697                           tblptrl	equ	0xFF6
   698                           tablat	equ	0xFF5
   699                           postinc0	equ	0xFEE
   700                           wreg	equ	0xFE8
   701                           postdec1	equ	0xFE5
   702                           fsr1l	equ	0xFE1
   703                           
   704 ;; *************** function _prevPage *****************
   705 ;; Defined at:
   706 ;;		line 152 in file "ledRGB.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   720 ;;      Params:         0       0       0       0       0       0       0       0       0
   721 ;;      Locals:         0       0       0       0       0       0       0       0       0
   722 ;;      Temps:          0       0       0       0       0       0       0       0       0
   723 ;;      Totals:         0       0       0       0       0       0       0       0       0
   724 ;;Total ram usage:        0 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    1
   727 ;; This function calls:
   728 ;;		_led_control
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text1
   735  007186                     __ptext1:
   736                           	opt stack 0
   737  007186                     _prevPage:
   738                           	opt stack 29
   739                           
   740                           ;ledRGB.c: 153: index_color_ = index_color_ < 1 ? 6 : index_color_ -1;
   741                           
   742                           ;incstack = 0
   743  007186  BE59               	btfsc	_index_color_+1,7,c
   744  007188  D00C               	goto	l57
   745  00718A  5059               	movf	_index_color_+1,w,c
   746  00718C  E103               	bnz	u1670
   747  00718E  0458               	decf	_index_color_,w,c
   748  007190  A0D8               	btfss	status,0,c
   749  007192  D007               	goto	l57
   750  007194                     u1670:
   751  007194  0EFF               	movlw	255
   752  007196  2458               	addwf	_index_color_,w,c
   753  007198  6E58               	movwf	_index_color_,c
   754  00719A  0EFF               	movlw	255
   755  00719C  2059               	addwfc	_index_color_+1,w,c
   756  00719E  6E59               	movwf	_index_color_+1,c
   757  0071A0  D004               	goto	l59
   758  0071A2                     l57:
   759  0071A2  0E00               	movlw	0
   760  0071A4  6E59               	movwf	_index_color_+1,c
   761  0071A6  0E06               	movlw	6
   762  0071A8  6E58               	movwf	_index_color_,c
   763  0071AA                     l59:
   764                           
   765                           ;ledRGB.c: 154: led_control(color_pages_[index_color_]);
   766  0071AA  0E4C               	movlw	low _color_pages_
   767  0071AC  2458               	addwf	_index_color_,w,c
   768  0071AE  6ED9               	movwf	fsr2l,c
   769  0071B0  0E00               	movlw	high _color_pages_
   770  0071B2  2059               	addwfc	_index_color_+1,w,c
   771  0071B4  6EDA               	movwf	fsr2h,c
   772  0071B6  50DF               	movf	indf2,w,c
   773  0071B8  ECD1  F039         	call	_led_control
   774  0071BC  0012               	return		;funcret
   775  0071BE                     __end_of_prevPage:
   776                           	opt stack 0
   777                           tblptru	equ	0xFF8
   778                           tblptrh	equ	0xFF7
   779                           tblptrl	equ	0xFF6
   780                           tablat	equ	0xFF5
   781                           postinc0	equ	0xFEE
   782                           wreg	equ	0xFE8
   783                           postdec1	equ	0xFE5
   784                           fsr1l	equ	0xFE1
   785                           indf2	equ	0xFDF
   786                           fsr2h	equ	0xFDA
   787                           fsr2l	equ	0xFD9
   788                           status	equ	0xFD8
   789                           
   790 ;; *************** function _nextPage *****************
   791 ;; Defined at:
   792 ;;		line 146 in file "ledRGB.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   806 ;;      Params:         0       0       0       0       0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    1
   813 ;; This function calls:
   814 ;;		_led_control
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text2
   821  0071BE                     __ptext2:
   822                           	opt stack 0
   823  0071BE                     _nextPage:
   824                           	opt stack 29
   825                           
   826                           ;ledRGB.c: 147: index_color_ = index_color_ > 5 ? 0 : index_color_ +1;
   827                           
   828                           ;incstack = 0
   829  0071BE  BE59               	btfsc	_index_color_+1,7,c
   830  0071C0  D006               	goto	u1660
   831  0071C2  5059               	movf	_index_color_+1,w,c
   832  0071C4  E10B               	bnz	l1988
   833  0071C6  0E06               	movlw	6
   834  0071C8  5C58               	subwf	_index_color_,w,c
   835  0071CA  B0D8               	btfsc	status,0,c
   836  0071CC  D007               	goto	l50
   837  0071CE                     u1660:
   838  0071CE  0E01               	movlw	1
   839  0071D0  2458               	addwf	_index_color_,w,c
   840  0071D2  6E58               	movwf	_index_color_,c
   841  0071D4  0E00               	movlw	0
   842  0071D6  2059               	addwfc	_index_color_+1,w,c
   843  0071D8  6E59               	movwf	_index_color_+1,c
   844  0071DA  D004               	goto	l52
   845  0071DC                     l50:
   846  0071DC                     l1988:
   847  0071DC  0E00               	movlw	0
   848  0071DE  6E59               	movwf	_index_color_+1,c
   849  0071E0  0E00               	movlw	0
   850  0071E2  6E58               	movwf	_index_color_,c
   851  0071E4                     l52:
   852                           
   853                           ;ledRGB.c: 148: led_control(color_pages_[index_color_]);
   854  0071E4  0E4C               	movlw	low _color_pages_
   855  0071E6  2458               	addwf	_index_color_,w,c
   856  0071E8  6ED9               	movwf	fsr2l,c
   857  0071EA  0E00               	movlw	high _color_pages_
   858  0071EC  2059               	addwfc	_index_color_+1,w,c
   859  0071EE  6EDA               	movwf	fsr2h,c
   860  0071F0  50DF               	movf	indf2,w,c
   861  0071F2  ECD1  F039         	call	_led_control
   862  0071F6  0012               	return		;funcret
   863  0071F8                     __end_of_nextPage:
   864                           	opt stack 0
   865                           tblptru	equ	0xFF8
   866                           tblptrh	equ	0xFF7
   867                           tblptrl	equ	0xFF6
   868                           tablat	equ	0xFF5
   869                           postinc0	equ	0xFEE
   870                           wreg	equ	0xFE8
   871                           postdec1	equ	0xFE5
   872                           fsr1l	equ	0xFE1
   873                           indf2	equ	0xFDF
   874                           fsr2h	equ	0xFDA
   875                           fsr2l	equ	0xFD9
   876                           status	equ	0xFD8
   877                           
   878 ;; *************** function _ledBlink *****************
   879 ;; Defined at:
   880 ;;		line 165 in file "ledRGB.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  d               2    3[COMRAM] int 
   885 ;;  c               2    1[COMRAM] int 
   886 ;;  e               2    0        int 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   896 ;;      Params:         0       0       0       0       0       0       0       0       0
   897 ;;      Locals:         4       0       0       0       0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0       0       0       0       0
   899 ;;      Totals:         4       0       0       0       0       0       0       0       0
   900 ;;Total ram usage:        4 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    2
   903 ;; This function calls:
   904 ;;		_ledOFF
   905 ;;		_ledON
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text3
   912  0071F8                     __ptext3:
   913                           	opt stack 0
   914  0071F8                     _ledBlink:
   915                           	opt stack 28
   916                           
   917                           ;ledRGB.c: 166: int c, d, e;
   918                           ;ledRGB.c: 168: ledON();
   919                           
   920                           ;incstack = 0
   921  0071F8  EC17  F038         	call	_ledON	;wreg free
   922                           
   923                           ;ledRGB.c: 169: for (c = 1; c <= 100; c++)
   924  0071FC  0E00               	movlw	0
   925  0071FE  6E03               	movwf	ledBlink@c+1,c
   926  007200  0E01               	movlw	1
   927  007202  6E02               	movwf	ledBlink@c,c
   928  007204                     l2004:
   929  007204  BE03               	btfsc	ledBlink@c+1,7,c
   930  007206  D006               	goto	l69
   931  007208  5003               	movf	ledBlink@c+1,w,c
   932  00720A  E116               	bnz	l2022
   933  00720C  0E65               	movlw	101
   934  00720E  5C02               	subwf	ledBlink@c,w,c
   935  007210  B0D8               	btfsc	status,0,c
   936  007212  D012               	goto	u1710
   937  007214                     l69:
   938                           
   939                           ;ledRGB.c: 170: for (d = 1; d <= 100; d++)
   940  007214  0E00               	movlw	0
   941  007216  6E05               	movwf	ledBlink@d+1,c
   942  007218  0E01               	movlw	1
   943  00721A  6E04               	movwf	ledBlink@d,c
   944  00721C                     l2010:
   945  00721C  BE05               	btfsc	ledBlink@d+1,7,c
   946  00721E  D006               	goto	l71
   947  007220  5005               	movf	ledBlink@d+1,w,c
   948  007222  E107               	bnz	l2018
   949  007224  0E65               	movlw	101
   950  007226  5C04               	subwf	ledBlink@d,w,c
   951  007228  B0D8               	btfsc	status,0,c
   952  00722A  D003               	goto	u1700
   953  00722C                     l71:
   954                           
   955                           ;ledRGB.c: 171: {}
   956  00722C  4A04               	infsnz	ledBlink@d,f,c
   957  00722E  2A05               	incf	ledBlink@d+1,f,c
   958  007230  D7F5               	goto	l2010
   959  007232                     u1700:
   960  007232                     l2018:
   961  007232  4A02               	infsnz	ledBlink@c,f,c
   962  007234  2A03               	incf	ledBlink@c+1,f,c
   963  007236  D7E6               	goto	l2004
   964  007238                     u1710:
   965  007238                     l2022:
   966                           
   967                           ;ledRGB.c: 172: ledOFF();
   968  007238  EC00  F038         	call	_ledOFF	;wreg free
   969                           
   970                           ;ledRGB.c: 175: for (c = 1; c <= 32767; c++)
   971  00723C  0E00               	movlw	0
   972  00723E  6E03               	movwf	ledBlink@c+1,c
   973  007240  0E01               	movlw	1
   974  007242  6E02               	movwf	ledBlink@c,c
   975                           
   976                           ;ledRGB.c: 176: for (d = 1; d <= 32767; d++)
   977  007244  0E00               	movlw	0
   978  007246  6E05               	movwf	ledBlink@d+1,c
   979  007248  0E01               	movlw	1
   980  00724A  6E04               	movwf	ledBlink@d,c
   981  00724C                     
   982                           ;ledRGB.c: 177: {}
   983  00724C  4A04               	infsnz	ledBlink@d,f,c
   984  00724E  2A05               	incf	ledBlink@d+1,f,c
   985  007250  D7FD               	goto	l75
   986  007252                     __end_of_ledBlink:
   987                           	opt stack 0
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postdec1	equ	0xFE5
   995                           fsr1l	equ	0xFE1
   996                           indf2	equ	0xFDF
   997                           fsr2h	equ	0xFDA
   998                           fsr2l	equ	0xFD9
   999                           status	equ	0xFD8
  1000                           
  1001 ;; *************** function _ledON *****************
  1002 ;; Defined at:
  1003 ;;		line 157 in file "ledRGB.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1017 ;;      Params:         0       0       0       0       0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1020 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1021 ;;Total ram usage:        0 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    1
  1024 ;; This function calls:
  1025 ;;		_led_control
  1026 ;; This function is called by:
  1027 ;;		_ledBlink
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text4
  1033  00702E                     __ptext4:
  1034                           	opt stack 0
  1035  00702E                     _ledON:
  1036                           	opt stack 29
  1037                           
  1038                           ;ledRGB.c: 158: led_control(color_pages_[index_color_]);
  1039                           
  1040                           ;incstack = 0
  1041  00702E  0E4C               	movlw	low _color_pages_
  1042  007030  2458               	addwf	_index_color_,w,c
  1043  007032  6ED9               	movwf	fsr2l,c
  1044  007034  0E00               	movlw	high _color_pages_
  1045  007036  2059               	addwfc	_index_color_+1,w,c
  1046  007038  6EDA               	movwf	fsr2h,c
  1047  00703A  50DF               	movf	indf2,w,c
  1048  00703C  ECD1  F039         	call	_led_control
  1049  007040  0012               	return		;funcret
  1050  007042                     __end_of_ledON:
  1051                           	opt stack 0
  1052                           tblptru	equ	0xFF8
  1053                           tblptrh	equ	0xFF7
  1054                           tblptrl	equ	0xFF6
  1055                           tablat	equ	0xFF5
  1056                           postinc0	equ	0xFEE
  1057                           wreg	equ	0xFE8
  1058                           postdec1	equ	0xFE5
  1059                           fsr1l	equ	0xFE1
  1060                           indf2	equ	0xFDF
  1061                           fsr2h	equ	0xFDA
  1062                           fsr2l	equ	0xFD9
  1063                           status	equ	0xFD8
  1064                           
  1065 ;; *************** function _ledOFF *****************
  1066 ;; Defined at:
  1067 ;;		line 161 in file "ledRGB.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         0       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    1
  1088 ;; This function calls:
  1089 ;;		_led_control
  1090 ;; This function is called by:
  1091 ;;		_ledBlink
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text5
  1097  007000                     __ptext5:
  1098                           	opt stack 0
  1099  007000                     _ledOFF:
  1100                           	opt stack 29
  1101                           
  1102                           ;ledRGB.c: 162: led_control(NONE);
  1103                           
  1104                           ;incstack = 0
  1105  007000  0E07               	movlw	7
  1106  007002  ECD1  F039         	call	_led_control
  1107  007006  0012               	return		;funcret
  1108  007008                     __end_of_ledOFF:
  1109                           	opt stack 0
  1110                           tblptru	equ	0xFF8
  1111                           tblptrh	equ	0xFF7
  1112                           tblptrl	equ	0xFF6
  1113                           tablat	equ	0xFF5
  1114                           postinc0	equ	0xFEE
  1115                           wreg	equ	0xFE8
  1116                           postdec1	equ	0xFE5
  1117                           fsr1l	equ	0xFE1
  1118                           indf2	equ	0xFDF
  1119                           fsr2h	equ	0xFDA
  1120                           fsr2l	equ	0xFD9
  1121                           status	equ	0xFD8
  1122                           
  1123 ;; *************** function _init_ledRGB *****************
  1124 ;; Defined at:
  1125 ;;		line 139 in file "ledRGB.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1139 ;;      Params:         0       0       0       0       0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1142 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1143 ;;Total ram usage:        0 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    1
  1146 ;; This function calls:
  1147 ;;		_led_control
  1148 ;;		_pwm_config_
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text6
  1155  00701E                     __ptext6:
  1156                           	opt stack 0
  1157  00701E                     _init_ledRGB:
  1158                           	opt stack 29
  1159                           
  1160                           ;ledRGB.c: 140: pwm_config_();
  1161                           
  1162                           ;incstack = 0
  1163  00701E  EC2C  F038         	call	_pwm_config_	;wreg free
  1164                           
  1165                           ;ledRGB.c: 141: CCPR1L = 199;
  1166  007022  0EC7               	movlw	199
  1167  007024  6EBE               	movwf	4030,c	;volatile
  1168                           
  1169                           ;ledRGB.c: 142: led_control(NONE);
  1170  007026  0E07               	movlw	7
  1171  007028  ECD1  F039         	call	_led_control
  1172  00702C  0012               	return		;funcret
  1173  00702E                     __end_of_init_ledRGB:
  1174                           	opt stack 0
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           postdec1	equ	0xFE5
  1182                           fsr1l	equ	0xFE1
  1183                           indf2	equ	0xFDF
  1184                           fsr2h	equ	0xFDA
  1185                           fsr2l	equ	0xFD9
  1186                           status	equ	0xFD8
  1187                           
  1188 ;; *************** function _pwm_config_ *****************
  1189 ;; Defined at:
  1190 ;;		line 123 in file "ledRGB.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1207 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1208 ;;Total ram usage:        0 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_init_ledRGB
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text7
  1218  007058                     __ptext7:
  1219                           	opt stack 0
  1220  007058                     _pwm_config_:
  1221                           	opt stack 29
  1222                           
  1223                           ;ledRGB.c: 124: TRISC2 = 0;
  1224                           
  1225                           ;incstack = 0
  1226  007058  9494               	bcf	3988,2,c	;volatile
  1227                           
  1228                           ;ledRGB.c: 125: PR2 = 199;
  1229  00705A  0EC7               	movlw	199
  1230  00705C  6ECB               	movwf	4043,c	;volatile
  1231                           
  1232                           ;ledRGB.c: 127: TRISCbits.TRISC2=0;
  1233  00705E  9494               	bcf	3988,2,c	;volatile
  1234                           
  1235                           ;ledRGB.c: 128: PR2=199;
  1236  007060  0EC7               	movlw	199
  1237  007062  6ECB               	movwf	4043,c	;volatile
  1238                           
  1239                           ;ledRGB.c: 129: CCPR1L=1;
  1240  007064  0E01               	movlw	1
  1241  007066  6EBE               	movwf	4030,c	;volatile
  1242                           
  1243                           ;ledRGB.c: 130: T2CON=0;
  1244  007068  0E00               	movlw	0
  1245  00706A  6ECA               	movwf	4042,c	;volatile
  1246                           
  1247                           ;ledRGB.c: 131: CCP1CON=0x0C;
  1248  00706C  0E0C               	movlw	12
  1249  00706E  6EBD               	movwf	4029,c	;volatile
  1250                           
  1251                           ;ledRGB.c: 132: TMR2=0;
  1252  007070  0E00               	movlw	0
  1253  007072  6ECC               	movwf	4044,c	;volatile
  1254                           
  1255                           ;ledRGB.c: 133: T2CONbits.TMR2ON=1;
  1256  007074  84CA               	bsf	4042,2,c	;volatile
  1257  007076  0012               	return		;funcret
  1258  007078                     __end_of_pwm_config_:
  1259                           	opt stack 0
  1260                           tblptru	equ	0xFF8
  1261                           tblptrh	equ	0xFF7
  1262                           tblptrl	equ	0xFF6
  1263                           tablat	equ	0xFF5
  1264                           postinc0	equ	0xFEE
  1265                           wreg	equ	0xFE8
  1266                           postdec1	equ	0xFE5
  1267                           fsr1l	equ	0xFE1
  1268                           indf2	equ	0xFDF
  1269                           fsr2h	equ	0xFDA
  1270                           fsr2l	equ	0xFD9
  1271                           status	equ	0xFD8
  1272                           
  1273 ;; *************** function _led_control *****************
  1274 ;; Defined at:
  1275 ;;		line 25 in file "ledRGB.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  ledCor          1    wreg     enum E3878
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  ledCor          1    0[COMRAM] enum E3878
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2, status,0
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0
  1290 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1292 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1293 ;;Total ram usage:        1 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; This function calls:
  1296 ;;		Nothing
  1297 ;; This function is called by:
  1298 ;;		_init_ledRGB
  1299 ;;		_nextPage
  1300 ;;		_prevPage
  1301 ;;		_ledON
  1302 ;;		_ledOFF
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text8
  1307  0073A2                     __ptext8:
  1308                           	opt stack 0
  1309  0073A2                     _led_control:
  1310                           	opt stack 29
  1311                           
  1312                           ;incstack = 0
  1313                           ;led_control@ledCor stored from wreg
  1314  0073A2  6E01               	movwf	led_control@ledCor,c
  1315                           
  1316                           ;ledRGB.c: 26: switch(ledCor){
  1317  0073A4  D020               	goto	l29
  1318  0073A6                     l30:
  1319                           
  1320                           ;ledRGB.c: 28: LATAbits.LATA1 = 1;
  1321  0073A6  8289               	bsf	3977,1,c	;volatile
  1322                           
  1323                           ;ledRGB.c: 29: LATAbits.LATA0 = 0;
  1324  0073A8  9089               	bcf	3977,0,c	;volatile
  1325                           
  1326                           ;ledRGB.c: 30: LATAbits.LATA2 = 0;
  1327  0073AA  9489               	bcf	3977,2,c	;volatile
  1328                           
  1329                           ;ledRGB.c: 31: break;
  1330  0073AC  0012               	return	
  1331  0073AE                     l32:
  1332                           
  1333                           ;ledRGB.c: 33: LATAbits.LATA1 = 0;
  1334  0073AE  9289               	bcf	3977,1,c	;volatile
  1335                           
  1336                           ;ledRGB.c: 34: LATAbits.LATA0 = 1;
  1337  0073B0  8089               	bsf	3977,0,c	;volatile
  1338                           
  1339                           ;ledRGB.c: 35: LATAbits.LATA2 = 0;
  1340  0073B2  9489               	bcf	3977,2,c	;volatile
  1341                           
  1342                           ;ledRGB.c: 36: break;
  1343  0073B4  0012               	return	
  1344  0073B6                     l33:
  1345                           
  1346                           ;ledRGB.c: 38: LATAbits.LATA1 = 0;
  1347  0073B6  9289               	bcf	3977,1,c	;volatile
  1348                           
  1349                           ;ledRGB.c: 39: LATAbits.LATA0 = 0;
  1350  0073B8  9089               	bcf	3977,0,c	;volatile
  1351                           
  1352                           ;ledRGB.c: 40: LATAbits.LATA2 = 1;
  1353  0073BA  8489               	bsf	3977,2,c	;volatile
  1354                           
  1355                           ;ledRGB.c: 41: break;
  1356  0073BC  0012               	return	
  1357  0073BE                     l34:
  1358                           
  1359                           ;ledRGB.c: 43: LATAbits.LATA1 = 0;
  1360  0073BE  9289               	bcf	3977,1,c	;volatile
  1361                           
  1362                           ;ledRGB.c: 44: LATAbits.LATA0 = 1;
  1363  0073C0  8089               	bsf	3977,0,c	;volatile
  1364                           
  1365                           ;ledRGB.c: 45: LATAbits.LATA2 = 1;
  1366  0073C2  8489               	bsf	3977,2,c	;volatile
  1367                           
  1368                           ;ledRGB.c: 46: break;
  1369  0073C4  0012               	return	
  1370  0073C6                     l35:
  1371                           
  1372                           ;ledRGB.c: 48: LATAbits.LATA1 = 1;
  1373  0073C6  8289               	bsf	3977,1,c	;volatile
  1374                           
  1375                           ;ledRGB.c: 49: LATAbits.LATA0 = 0;
  1376  0073C8  9089               	bcf	3977,0,c	;volatile
  1377                           
  1378                           ;ledRGB.c: 50: LATAbits.LATA2 = 1;
  1379  0073CA  8489               	bsf	3977,2,c	;volatile
  1380                           
  1381                           ;ledRGB.c: 51: break;
  1382  0073CC  0012               	return	
  1383  0073CE                     l36:
  1384                           
  1385                           ;ledRGB.c: 53: LATAbits.LATA1 = 1;
  1386  0073CE  8289               	bsf	3977,1,c	;volatile
  1387                           
  1388                           ;ledRGB.c: 54: LATAbits.LATA0 = 1;
  1389  0073D0  8089               	bsf	3977,0,c	;volatile
  1390                           
  1391                           ;ledRGB.c: 55: LATAbits.LATA2 = 0;
  1392  0073D2  9489               	bcf	3977,2,c	;volatile
  1393                           
  1394                           ;ledRGB.c: 56: break;
  1395  0073D4  0012               	return	
  1396  0073D6                     l37:
  1397                           
  1398                           ;ledRGB.c: 58: LATAbits.LATA1 = 1;
  1399  0073D6  8289               	bsf	3977,1,c	;volatile
  1400                           
  1401                           ;ledRGB.c: 59: LATAbits.LATA0 = 1;
  1402  0073D8  8089               	bsf	3977,0,c	;volatile
  1403                           
  1404                           ;ledRGB.c: 60: LATAbits.LATA2 = 1;
  1405  0073DA  8489               	bsf	3977,2,c	;volatile
  1406                           
  1407                           ;ledRGB.c: 61: break;
  1408  0073DC  0012               	return	
  1409  0073DE                     l38:
  1410                           
  1411                           ;ledRGB.c: 63: LATAbits.LATA1 = 0;
  1412  0073DE  9289               	bcf	3977,1,c	;volatile
  1413                           
  1414                           ;ledRGB.c: 64: LATAbits.LATA0 = 0;
  1415  0073E0  9089               	bcf	3977,0,c	;volatile
  1416                           
  1417                           ;ledRGB.c: 65: LATAbits.LATA2 = 0;
  1418  0073E2  9489               	bcf	3977,2,c	;volatile
  1419                           
  1420                           ;ledRGB.c: 69: }
  1421                           
  1422                           ;ledRGB.c: 68: break;
  1423                           
  1424                           ;ledRGB.c: 67: default:
  1425                           
  1426                           ;ledRGB.c: 66: break;
  1427  0073E4  0012               	return	
  1428  0073E6                     l29:
  1429  0073E6  5001               	movf	led_control@ledCor,w,c
  1430                           
  1431                           ; Switch size 1, requested type "space"
  1432                           ; Number of cases is 8, Range of values is 0 to 7
  1433                           ; switch strategies available:
  1434                           ; Name         Instructions Cycles
  1435                           ; simple_byte           25    13 (average)
  1436                           ;	Chosen strategy is simple_byte
  1437  0073E8  0A00               	xorlw	0	; case 0
  1438  0073EA  B4D8               	btfsc	status,2,c
  1439  0073EC  D7E4               	goto	l33
  1440  0073EE  0A01               	xorlw	1	; case 1
  1441  0073F0  B4D8               	btfsc	status,2,c
  1442  0073F2  D7D9               	goto	l30
  1443  0073F4  0A03               	xorlw	3	; case 2
  1444  0073F6  B4D8               	btfsc	status,2,c
  1445  0073F8  D7DA               	goto	l32
  1446  0073FA  0A01               	xorlw	1	; case 3
  1447  0073FC  B4D8               	btfsc	status,2,c
  1448  0073FE  D7DF               	goto	l34
  1449  007400  0A07               	xorlw	7	; case 4
  1450  007402  B4D8               	btfsc	status,2,c
  1451  007404  D7E0               	goto	l35
  1452  007406  0A01               	xorlw	1	; case 5
  1453  007408  B4D8               	btfsc	status,2,c
  1454  00740A  D7E1               	goto	l36
  1455  00740C  0A03               	xorlw	3	; case 6
  1456  00740E  B4D8               	btfsc	status,2,c
  1457  007410  D7E2               	goto	l37
  1458  007412  0A01               	xorlw	1	; case 7
  1459  007414  A4D8               	btfss	status,2,c
  1460  007416  0012               	return	
  1461  007418  D7E2               	goto	l38
  1462  00741A                     __end_of_led_control:
  1463                           	opt stack 0
  1464                           tblptru	equ	0xFF8
  1465                           tblptrh	equ	0xFF7
  1466                           tblptrl	equ	0xFF6
  1467                           tablat	equ	0xFF5
  1468                           postinc0	equ	0xFEE
  1469                           wreg	equ	0xFE8
  1470                           postdec1	equ	0xFE5
  1471                           fsr1l	equ	0xFE1
  1472                           indf2	equ	0xFDF
  1473                           fsr2h	equ	0xFDA
  1474                           fsr2l	equ	0xFD9
  1475                           status	equ	0xFD8
  1476                           
  1477 ;; *************** function _init_XZ_Gesture *****************
  1478 ;; Defined at:
  1479 ;;		line 69 in file "ZXgesture-library.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  2  105[None  ] int 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1493 ;;      Params:         0       0       0       0       0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1496 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1497 ;;Total ram usage:        0 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    1
  1500 ;; This function calls:
  1501 ;;		_UART_Init
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text9
  1508  006FDA                     __ptext9:
  1509                           	opt stack 0
  1510  006FDA                     _init_XZ_Gesture:
  1511                           	opt stack 29
  1512                           
  1513                           ;ZXgesture-library.c: 70: UART_Init();
  1514                           
  1515                           ;incstack = 0
  1516  006FDA  EC21  F038         	call	_UART_Init	;wreg free
  1517  006FDE  0012               	return	
  1518  006FE0                     __end_of_init_XZ_Gesture:
  1519                           	opt stack 0
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           postdec1	equ	0xFE5
  1527                           fsr1l	equ	0xFE1
  1528                           indf2	equ	0xFDF
  1529                           fsr2h	equ	0xFDA
  1530                           fsr2l	equ	0xFD9
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function _UART_Init *****************
  1534 ;; Defined at:
  1535 ;;		line 39 in file "ZXgesture-library.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1549 ;;      Params:         0       0       0       0       0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1552 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_init_XZ_Gesture
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text10
  1563  007042                     __ptext10:
  1564                           	opt stack 0
  1565  007042                     _UART_Init:
  1566                           	opt stack 29
  1567                           
  1568                           ;ZXgesture-library.c: 41: BRGH = 0;
  1569                           
  1570                           ;incstack = 0
  1571  007042  94AC               	bcf	4012,2,c	;volatile
  1572                           
  1573                           ;ZXgesture-library.c: 42: BRG16 = 1;
  1574  007044  86B8               	bsf	4024,3,c	;volatile
  1575                           
  1576                           ;ZXgesture-library.c: 43: SYNC = 0;
  1577  007046  98AC               	bcf	4012,4,c	;volatile
  1578                           
  1579                           ;ZXgesture-library.c: 44: SPBRG = 10;
  1580  007048  0E0A               	movlw	10
  1581  00704A  6EAF               	movwf	4015,c	;volatile
  1582                           
  1583                           ;ZXgesture-library.c: 45: SPEN = 1;
  1584  00704C  8EAB               	bsf	4011,7,c	;volatile
  1585                           
  1586                           ;ZXgesture-library.c: 46: CREN = 1;
  1587  00704E  88AB               	bsf	4011,4,c	;volatile
  1588                           
  1589                           ;ZXgesture-library.c: 47: TXEN = 1;
  1590  007050  8AAC               	bsf	4012,5,c	;volatile
  1591                           
  1592                           ;ZXgesture-library.c: 48: TRISC7 = 1;
  1593  007052  8E94               	bsf	3988,7,c	;volatile
  1594                           
  1595                           ;ZXgesture-library.c: 49: TRISC6 = 0;
  1596  007054  9C94               	bcf	3988,6,c	;volatile
  1597  007056  0012               	return		;funcret
  1598  007058                     __end_of_UART_Init:
  1599                           	opt stack 0
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           postdec1	equ	0xFE5
  1607                           fsr1l	equ	0xFE1
  1608                           indf2	equ	0xFDF
  1609                           fsr2h	equ	0xFDA
  1610                           fsr2l	equ	0xFD9
  1611                           status	equ	0xFD8
  1612                           
  1613 ;; *************** function _increasePWM *****************
  1614 ;; Defined at:
  1615 ;;		line 180 in file "ledRGB.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  val             2   71[COMRAM] int 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1629 ;;      Params:         0       0       0       0       0       0       0       0       0
  1630 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1632 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1633 ;;Total ram usage:        7 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    3
  1636 ;; This function calls:
  1637 ;;		___awdiv
  1638 ;;		___awtoft
  1639 ;;		___ftadd
  1640 ;;		___ftneg
  1641 ;;		___fttol
  1642 ;;		___wmul
  1643 ;;		_ceil
  1644 ;; This function is called by:
  1645 ;;		_main
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text11
  1650  0076A8                     __ptext11:
  1651                           	opt stack 0
  1652  0076A8                     _increasePWM:
  1653                           	opt stack 27
  1654                           
  1655                           ;ledRGB.c: 181: _pwm_count = _pwm_count < 1 ? _pwm_count : _pwm_count-1;
  1656                           
  1657                           ;incstack = 0
  1658  0076A8  BE5C               	btfsc	__pwm_count+1,7,c
  1659  0076AA  D00B               	goto	l81
  1660  0076AC  505C               	movf	__pwm_count+1,w,c
  1661  0076AE  E103               	bnz	u1720
  1662  0076B0  045B               	decf	__pwm_count,w,c
  1663  0076B2  A0D8               	btfss	status,0,c
  1664  0076B4  D006               	goto	l81
  1665  0076B6                     u1720:
  1666  0076B6  0EFF               	movlw	255
  1667  0076B8  245B               	addwf	__pwm_count,w,c
  1668  0076BA  6E5B               	movwf	__pwm_count,c
  1669  0076BC  0EFF               	movlw	255
  1670  0076BE  205C               	addwfc	__pwm_count+1,w,c
  1671  0076C0  6E5C               	movwf	__pwm_count+1,c
  1672  0076C2                     l81:
  1673                           
  1674                           ;ledRGB.c: 182: int val = 199 - ceil((199 - 5)*_pwm_count/3);
  1675  0076C2  0E00               	movlw	0
  1676  0076C4  6E0A               	movwf	___awdiv@divisor+1,c
  1677  0076C6  0E03               	movlw	3
  1678  0076C8  6E09               	movwf	___awdiv@divisor,c
  1679  0076CA  C05B  F001         	movff	__pwm_count,___wmul@multiplier
  1680  0076CE  C05C  F002         	movff	__pwm_count+1,___wmul@multiplier+1
  1681  0076D2  0E00               	movlw	0
  1682  0076D4  6E04               	movwf	___wmul@multiplicand+1,c
  1683  0076D6  0EC2               	movlw	194
  1684  0076D8  6E03               	movwf	___wmul@multiplicand,c
  1685  0076DA  EC4E  F038         	call	___wmul	;wreg free
  1686  0076DE  C001  F007         	movff	?___wmul,___awdiv@dividend
  1687  0076E2  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  1688  0076E6  EC0D  F03A         	call	___awdiv	;wreg free
  1689  0076EA  C007  F00F         	movff	?___awdiv,___awtoft@c
  1690  0076EE  C008  F010         	movff	?___awdiv+1,___awtoft@c+1
  1691  0076F2  ECA7  F038         	call	___awtoft	;wreg free
  1692  0076F6  C00F  F038         	movff	?___awtoft,ceil@x
  1693  0076FA  C010  F039         	movff	?___awtoft+1,ceil@x+1
  1694  0076FE  C011  F03A         	movff	?___awtoft+2,ceil@x+2
  1695  007702  EC39  F03C         	call	_ceil	;wreg free
  1696  007706  C038  F040         	movff	?_ceil,___ftneg@f1
  1697  00770A  C039  F041         	movff	?_ceil+1,___ftneg@f1+1
  1698  00770E  C03A  F042         	movff	?_ceil+2,___ftneg@f1+2
  1699  007712  EC3C  F038         	call	___ftneg	;wreg free
  1700  007716  C040  F043         	movff	?___ftneg,_increasePWM$916
  1701  00771A  C041  F044         	movff	?___ftneg+1,_increasePWM$916+1
  1702  00771E  C042  F045         	movff	?___ftneg+2,_increasePWM$916+2
  1703                           
  1704                           ;ledRGB.c: 182: int val = 199 - ceil((199 - 5)*_pwm_count/3);
  1705  007722  0E00               	movlw	0
  1706  007724  6E16               	movwf	___ftadd@f2,c
  1707  007726  0E47               	movlw	71
  1708  007728  6E17               	movwf	___ftadd@f2+1,c
  1709  00772A  0E43               	movlw	67
  1710  00772C  6E18               	movwf	___ftadd@f2+2,c
  1711  00772E  C043  F013         	movff	_increasePWM$916,___ftadd@f1
  1712  007732  C044  F014         	movff	_increasePWM$916+1,___ftadd@f1+1
  1713  007736  C045  F015         	movff	_increasePWM$916+2,___ftadd@f1+2
  1714  00773A  ECB5  F03C         	call	___ftadd	;wreg free
  1715  00773E  C013  F01F         	movff	?___ftadd,___fttol@f1
  1716  007742  C014  F020         	movff	?___ftadd+1,___fttol@f1+1
  1717  007746  C015  F021         	movff	?___ftadd+2,___fttol@f1+2
  1718  00774A  ECBF  F03B         	call	___fttol	;wreg free
  1719  00774E  C01F  F048         	movff	?___fttol,increasePWM@val
  1720  007752  C020  F049         	movff	?___fttol+1,increasePWM@val+1
  1721                           
  1722                           ;ledRGB.c: 183: CCPR1L = val > 199 ? 199 : val;
  1723  007756  BE49               	btfsc	increasePWM@val+1,7,c
  1724  007758  D006               	goto	u1730
  1725  00775A  5049               	movf	increasePWM@val+1,w,c
  1726  00775C  E109               	bnz	l2048
  1727  00775E  0EC8               	movlw	200
  1728  007760  5C48               	subwf	increasePWM@val,w,c
  1729  007762  B0D8               	btfsc	status,0,c
  1730  007764  D005               	goto	l85
  1731  007766                     u1730:
  1732  007766  C048  F046         	movff	increasePWM@val,_increasePWM$187
  1733  00776A  C049  F047         	movff	increasePWM@val+1,_increasePWM$187+1
  1734  00776E  D004               	goto	l87
  1735  007770                     l85:
  1736  007770                     l2048:
  1737  007770  0E00               	movlw	0
  1738  007772  6E47               	movwf	_increasePWM$187+1,c
  1739  007774  0EC7               	movlw	199
  1740  007776  6E46               	movwf	_increasePWM$187,c
  1741  007778                     l87:
  1742  007778  C046  FFBE         	movff	_increasePWM$187,4030	;volatile
  1743  00777C  0012               	return		;funcret
  1744  00777E                     __end_of_increasePWM:
  1745                           	opt stack 0
  1746                           tblptru	equ	0xFF8
  1747                           tblptrh	equ	0xFF7
  1748                           tblptrl	equ	0xFF6
  1749                           tablat	equ	0xFF5
  1750                           postinc0	equ	0xFEE
  1751                           wreg	equ	0xFE8
  1752                           postdec1	equ	0xFE5
  1753                           fsr1l	equ	0xFE1
  1754                           indf2	equ	0xFDF
  1755                           fsr2h	equ	0xFDA
  1756                           fsr2l	equ	0xFD9
  1757                           status	equ	0xFD8
  1758                           
  1759 ;; *************** function _getLastZ *****************
  1760 ;; Defined at:
  1761 ;;		line 132 in file "ZXgesture-library.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;		None
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  2    0[COMRAM] int 
  1768 ;; Registers used:
  1769 ;;		None
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1775 ;;      Params:         2       0       0       0       0       0       0       0       0
  1776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1778 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1779 ;;Total ram usage:        2 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_main
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text12
  1789  006FF8                     __ptext12:
  1790                           	opt stack 0
  1791  006FF8                     _getLastZ:
  1792                           	opt stack 30
  1793                           
  1794                           ;ZXgesture-library.c: 133: return _last_z;
  1795                           
  1796                           ;incstack = 0
  1797  006FF8  C054  F001         	movff	__last_z,?_getLastZ
  1798  006FFC  6A02               	clrf	?_getLastZ+1,c
  1799  006FFE  0012               	return		;funcret
  1800  007000                     __end_of_getLastZ:
  1801                           	opt stack 0
  1802                           tblptru	equ	0xFF8
  1803                           tblptrh	equ	0xFF7
  1804                           tblptrl	equ	0xFF6
  1805                           tablat	equ	0xFF5
  1806                           postinc0	equ	0xFEE
  1807                           wreg	equ	0xFE8
  1808                           postdec1	equ	0xFE5
  1809                           fsr1l	equ	0xFE1
  1810                           indf2	equ	0xFDF
  1811                           fsr2h	equ	0xFDA
  1812                           fsr2l	equ	0xFD9
  1813                           status	equ	0xFD8
  1814                           
  1815 ;; *************** function _getLastX *****************
  1816 ;; Defined at:
  1817 ;;		line 128 in file "ZXgesture-library.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  2    0[COMRAM] int 
  1824 ;; Registers used:
  1825 ;;		None
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1831 ;;      Params:         2       0       0       0       0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1834 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1835 ;;Total ram usage:        2 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text13
  1845  006FF0                     __ptext13:
  1846                           	opt stack 0
  1847  006FF0                     _getLastX:
  1848                           	opt stack 30
  1849                           
  1850                           ;ZXgesture-library.c: 129: return _last_x;
  1851                           
  1852                           ;incstack = 0
  1853  006FF0  C055  F001         	movff	__last_x,?_getLastX
  1854  006FF4  6A02               	clrf	?_getLastX+1,c
  1855  006FF6  0012               	return		;funcret
  1856  006FF8                     __end_of_getLastX:
  1857                           	opt stack 0
  1858                           tblptru	equ	0xFF8
  1859                           tblptrh	equ	0xFF7
  1860                           tblptrl	equ	0xFF6
  1861                           tablat	equ	0xFF5
  1862                           postinc0	equ	0xFEE
  1863                           wreg	equ	0xFE8
  1864                           postdec1	equ	0xFE5
  1865                           fsr1l	equ	0xFE1
  1866                           indf2	equ	0xFDF
  1867                           fsr2h	equ	0xFDA
  1868                           fsr2l	equ	0xFD9
  1869                           status	equ	0xFD8
  1870                           
  1871 ;; *************** function _decreasePWM *****************
  1872 ;; Defined at:
  1873 ;;		line 186 in file "ledRGB.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  val             2   71[COMRAM] int 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0
  1888 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1890 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1891 ;;Total ram usage:        7 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    3
  1894 ;; This function calls:
  1895 ;;		___awdiv
  1896 ;;		___awtoft
  1897 ;;		___ftadd
  1898 ;;		___ftneg
  1899 ;;		___fttol
  1900 ;;		___wmul
  1901 ;;		_ceil
  1902 ;; This function is called by:
  1903 ;;		_main
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text14
  1908  0075DC                     __ptext14:
  1909                           	opt stack 0
  1910  0075DC                     _decreasePWM:
  1911                           	opt stack 27
  1912                           
  1913                           ;ledRGB.c: 187: _pwm_count = _pwm_count > 2 ? _pwm_count : _pwm_count+1;
  1914                           
  1915                           ;incstack = 0
  1916  0075DC  BE5C               	btfsc	__pwm_count+1,7,c
  1917  0075DE  D006               	goto	u1740
  1918  0075E0  505C               	movf	__pwm_count+1,w,c
  1919  0075E2  E10A               	bnz	l2056
  1920  0075E4  0E03               	movlw	3
  1921  0075E6  5C5B               	subwf	__pwm_count,w,c
  1922  0075E8  B0D8               	btfsc	status,0,c
  1923  0075EA  D006               	goto	l92
  1924  0075EC                     u1740:
  1925  0075EC  0E01               	movlw	1
  1926  0075EE  245B               	addwf	__pwm_count,w,c
  1927  0075F0  6E5B               	movwf	__pwm_count,c
  1928  0075F2  0E00               	movlw	0
  1929  0075F4  205C               	addwfc	__pwm_count+1,w,c
  1930  0075F6  6E5C               	movwf	__pwm_count+1,c
  1931  0075F8                     l92:
  1932  0075F8                     l2056:
  1933                           
  1934                           ;ledRGB.c: 188: int val = 199 - ceil((199 - 5)*_pwm_count/3);
  1935  0075F8  0E00               	movlw	0
  1936  0075FA  6E0A               	movwf	___awdiv@divisor+1,c
  1937  0075FC  0E03               	movlw	3
  1938  0075FE  6E09               	movwf	___awdiv@divisor,c
  1939  007600  C05B  F001         	movff	__pwm_count,___wmul@multiplier
  1940  007604  C05C  F002         	movff	__pwm_count+1,___wmul@multiplier+1
  1941  007608  0E00               	movlw	0
  1942  00760A  6E04               	movwf	___wmul@multiplicand+1,c
  1943  00760C  0EC2               	movlw	194
  1944  00760E  6E03               	movwf	___wmul@multiplicand,c
  1945  007610  EC4E  F038         	call	___wmul	;wreg free
  1946  007614  C001  F007         	movff	?___wmul,___awdiv@dividend
  1947  007618  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  1948  00761C  EC0D  F03A         	call	___awdiv	;wreg free
  1949  007620  C007  F00F         	movff	?___awdiv,___awtoft@c
  1950  007624  C008  F010         	movff	?___awdiv+1,___awtoft@c+1
  1951  007628  ECA7  F038         	call	___awtoft	;wreg free
  1952  00762C  C00F  F038         	movff	?___awtoft,ceil@x
  1953  007630  C010  F039         	movff	?___awtoft+1,ceil@x+1
  1954  007634  C011  F03A         	movff	?___awtoft+2,ceil@x+2
  1955  007638  EC39  F03C         	call	_ceil	;wreg free
  1956  00763C  C038  F040         	movff	?_ceil,___ftneg@f1
  1957  007640  C039  F041         	movff	?_ceil+1,___ftneg@f1+1
  1958  007644  C03A  F042         	movff	?_ceil+2,___ftneg@f1+2
  1959  007648  EC3C  F038         	call	___ftneg	;wreg free
  1960  00764C  C040  F043         	movff	?___ftneg,_decreasePWM$917
  1961  007650  C041  F044         	movff	?___ftneg+1,_decreasePWM$917+1
  1962  007654  C042  F045         	movff	?___ftneg+2,_decreasePWM$917+2
  1963                           
  1964                           ;ledRGB.c: 188: int val = 199 - ceil((199 - 5)*_pwm_count/3);
  1965  007658  0E00               	movlw	0
  1966  00765A  6E16               	movwf	___ftadd@f2,c
  1967  00765C  0E47               	movlw	71
  1968  00765E  6E17               	movwf	___ftadd@f2+1,c
  1969  007660  0E43               	movlw	67
  1970  007662  6E18               	movwf	___ftadd@f2+2,c
  1971  007664  C043  F013         	movff	_decreasePWM$917,___ftadd@f1
  1972  007668  C044  F014         	movff	_decreasePWM$917+1,___ftadd@f1+1
  1973  00766C  C045  F015         	movff	_decreasePWM$917+2,___ftadd@f1+2
  1974  007670  ECB5  F03C         	call	___ftadd	;wreg free
  1975  007674  C013  F01F         	movff	?___ftadd,___fttol@f1
  1976  007678  C014  F020         	movff	?___ftadd+1,___fttol@f1+1
  1977  00767C  C015  F021         	movff	?___ftadd+2,___fttol@f1+2
  1978  007680  ECBF  F03B         	call	___fttol	;wreg free
  1979  007684  C01F  F048         	movff	?___fttol,decreasePWM@val
  1980  007688  C020  F049         	movff	?___fttol+1,decreasePWM@val+1
  1981                           
  1982                           ;ledRGB.c: 189: CCPR1L = val < 0 ? 0 : val;
  1983  00768C  BE49               	btfsc	decreasePWM@val+1,7,c
  1984  00768E  D005               	goto	l96
  1985  007690  C048  F046         	movff	decreasePWM@val,_decreasePWM$190
  1986  007694  C049  F047         	movff	decreasePWM@val+1,_decreasePWM$190+1
  1987  007698  D004               	goto	l98
  1988  00769A                     l96:
  1989  00769A  0E00               	movlw	0
  1990  00769C  6E47               	movwf	_decreasePWM$190+1,c
  1991  00769E  0E00               	movlw	0
  1992  0076A0  6E46               	movwf	_decreasePWM$190,c
  1993  0076A2                     l98:
  1994  0076A2  C046  FFBE         	movff	_decreasePWM$190,4030	;volatile
  1995  0076A6  0012               	return		;funcret
  1996  0076A8                     __end_of_decreasePWM:
  1997                           	opt stack 0
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           postdec1	equ	0xFE5
  2005                           fsr1l	equ	0xFE1
  2006                           indf2	equ	0xFDF
  2007                           fsr2h	equ	0xFDA
  2008                           fsr2l	equ	0xFD9
  2009                           status	equ	0xFD8
  2010                           
  2011 ;; *************** function _ceil *****************
  2012 ;; Defined at:
  2013 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ceil.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  x               3   55[COMRAM] void 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  i               3   58[COMRAM] void 
  2018 ;;  expon           2   61[COMRAM] int 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  3   55[COMRAM] int 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2028 ;;      Params:         3       0       0       0       0       0       0       0       0
  2029 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2031 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2032 ;;Total ram usage:        8 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    2
  2035 ;; This function calls:
  2036 ;;		___altoft
  2037 ;;		___ftadd
  2038 ;;		___ftge
  2039 ;;		___fttol
  2040 ;;		_frexp
  2041 ;; This function is called by:
  2042 ;;		_increasePWM
  2043 ;;		_decreasePWM
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text15
  2048  007872                     __ptext15:
  2049                           	opt stack 0
  2050  007872                     _ceil:
  2051                           	opt stack 27
  2052                           
  2053                           ;incstack = 0
  2054  007872  C038  F001         	movff	ceil@x,frexp@value
  2055  007876  C039  F002         	movff	ceil@x+1,frexp@value+1
  2056  00787A  C03A  F003         	movff	ceil@x+2,frexp@value+2
  2057  00787E  0E3E               	movlw	low ceil@expon
  2058  007880  6E04               	movwf	frexp@eptr,c
  2059  007882  0E00               	movlw	high ceil@expon
  2060  007884  6E05               	movwf	frexp@eptr+1,c
  2061  007886  EC95  F039         	call	_frexp	;wreg free
  2062  00788A  AE3F               	btfss	ceil@expon+1,7,c
  2063  00788C  D01D               	goto	l507
  2064  00788E  0E00               	movlw	0
  2065  007890  6E01               	movwf	___ftge@ff1,c
  2066  007892  0E00               	movlw	0
  2067  007894  6E02               	movwf	___ftge@ff1+1,c
  2068  007896  0E00               	movlw	0
  2069  007898  6E03               	movwf	___ftge@ff1+2,c
  2070  00789A  C038  F004         	movff	ceil@x,___ftge@ff2
  2071  00789E  C039  F005         	movff	ceil@x+1,___ftge@ff2+1
  2072  0078A2  C03A  F006         	movff	ceil@x+2,___ftge@ff2+2
  2073  0078A6  EC4F  F03A         	call	___ftge	;wreg free
  2074  0078AA  A0D8               	btfss	status,0,c
  2075  0078AC  D006               	goto	l505
  2076  0078AE  0E00               	movlw	0
  2077  0078B0  6E38               	movwf	?_ceil,c
  2078  0078B2  0E00               	movlw	0
  2079  0078B4  6E39               	movwf	?_ceil+1,c
  2080  0078B6  0E00               	movlw	0
  2081  0078B8  D005               	goto	L2
  2082  0078BA                     l505:
  2083  0078BA  0E00               	movlw	0
  2084  0078BC  6E38               	movwf	?_ceil,c
  2085  0078BE  0E80               	movlw	128
  2086  0078C0  6E39               	movwf	?_ceil+1,c
  2087  0078C2  0E3F               	movlw	63
  2088  0078C4                     L2:
  2089  0078C4  6E3A               	movwf	?_ceil+2,c
  2090  0078C6  0012               	return	
  2091  0078C8                     l507:
  2092  0078C8  503F               	movf	ceil@expon+1,w,c
  2093  0078CA  E104               	bnz	u1550
  2094  0078CC  0E15               	movlw	21
  2095  0078CE  5C3E               	subwf	ceil@expon,w,c
  2096  0078D0  A0D8               	btfss	status,0,c
  2097  0078D2  D007               	goto	l508
  2098  0078D4                     u1550:
  2099  0078D4  C038  F038         	movff	ceil@x,?_ceil
  2100  0078D8  C039  F039         	movff	ceil@x+1,?_ceil+1
  2101  0078DC  C03A  F03A         	movff	ceil@x+2,?_ceil+2
  2102  0078E0  0012               	return	
  2103  0078E2                     l508:
  2104  0078E2  C038  F01F         	movff	ceil@x,___fttol@f1
  2105  0078E6  C039  F020         	movff	ceil@x+1,___fttol@f1+1
  2106  0078EA  C03A  F021         	movff	ceil@x+2,___fttol@f1+2
  2107  0078EE  ECBF  F03B         	call	___fttol	;wreg free
  2108  0078F2  C01F  F02E         	movff	?___fttol,___altoft@c
  2109  0078F6  C020  F02F         	movff	?___fttol+1,___altoft@c+1
  2110  0078FA  C021  F030         	movff	?___fttol+2,___altoft@c+2
  2111  0078FE  C022  F031         	movff	?___fttol+3,___altoft@c+3
  2112  007902  EC59  F039         	call	___altoft	;wreg free
  2113  007906  C02E  F03B         	movff	?___altoft,ceil@i
  2114  00790A  C02F  F03C         	movff	?___altoft+1,ceil@i+1
  2115  00790E  C030  F03D         	movff	?___altoft+2,ceil@i+2
  2116  007912  C03B  F001         	movff	ceil@i,___ftge@ff1
  2117  007916  C03C  F002         	movff	ceil@i+1,___ftge@ff1+1
  2118  00791A  C03D  F003         	movff	ceil@i+2,___ftge@ff1+2
  2119  00791E  C038  F004         	movff	ceil@x,___ftge@ff2
  2120  007922  C039  F005         	movff	ceil@x+1,___ftge@ff2+1
  2121  007926  C03A  F006         	movff	ceil@x+2,___ftge@ff2+2
  2122  00792A  EC4F  F03A         	call	___ftge	;wreg free
  2123  00792E  B0D8               	btfsc	status,0,c
  2124  007930  D015               	goto	l509
  2125  007932  C03B  F013         	movff	ceil@i,___ftadd@f1
  2126  007936  C03C  F014         	movff	ceil@i+1,___ftadd@f1+1
  2127  00793A  C03D  F015         	movff	ceil@i+2,___ftadd@f1+2
  2128  00793E  0E00               	movlw	0
  2129  007940  6E16               	movwf	___ftadd@f2,c
  2130  007942  0E80               	movlw	128
  2131  007944  6E17               	movwf	___ftadd@f2+1,c
  2132  007946  0E3F               	movlw	63
  2133  007948  6E18               	movwf	___ftadd@f2+2,c
  2134  00794A  ECB5  F03C         	call	___ftadd	;wreg free
  2135  00794E  C013  F038         	movff	?___ftadd,?_ceil
  2136  007952  C014  F039         	movff	?___ftadd+1,?_ceil+1
  2137  007956  C015  F03A         	movff	?___ftadd+2,?_ceil+2
  2138  00795A  0012               	return	
  2139  00795C                     l509:
  2140  00795C  C03B  F038         	movff	ceil@i,?_ceil
  2141  007960  C03C  F039         	movff	ceil@i+1,?_ceil+1
  2142  007964  C03D  F03A         	movff	ceil@i+2,?_ceil+2
  2143  007968  0012               	return		;funcret
  2144  00796A                     __end_of_ceil:
  2145                           	opt stack 0
  2146                           tblptru	equ	0xFF8
  2147                           tblptrh	equ	0xFF7
  2148                           tblptrl	equ	0xFF6
  2149                           tablat	equ	0xFF5
  2150                           postinc0	equ	0xFEE
  2151                           wreg	equ	0xFE8
  2152                           postdec1	equ	0xFE5
  2153                           fsr1l	equ	0xFE1
  2154                           indf2	equ	0xFDF
  2155                           fsr2h	equ	0xFDA
  2156                           fsr2l	equ	0xFD9
  2157                           status	equ	0xFD8
  2158                           
  2159 ;; *************** function _frexp *****************
  2160 ;; Defined at:
  2161 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  value           3    0[COMRAM] int 
  2164 ;;  eptr            2    3[COMRAM] PTR int 
  2165 ;;		 -> ceil@expon(2), 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  3    0[COMRAM] PTR int 
  2170 ;; Registers used:
  2171 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2177 ;;      Params:         5       0       0       0       0       0       0       0       0
  2178 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2179 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2180 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2181 ;;Total ram usage:        7 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_ceil
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text16
  2191  00732A                     __ptext16:
  2192                           	opt stack 0
  2193  00732A                     _frexp:
  2194                           	opt stack 28
  2195                           
  2196                           ;incstack = 0
  2197  00732A  5001               	movf	frexp@value,w,c
  2198  00732C  1002               	iorwf	frexp@value+1,w,c
  2199  00732E  1003               	iorwf	frexp@value+2,w,c
  2200  007330  A4D8               	btfss	status,2,c
  2201  007332  D009               	goto	l558
  2202  007334  C004  FFD9         	movff	frexp@eptr,fsr2l
  2203  007338  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2204  00733C  0E00               	movlw	0
  2205  00733E  6EDE               	movwf	postinc2,c
  2206  007340  0E00               	movlw	0
  2207  007342  6EDD               	movwf	postdec2,c
  2208                           
  2209                           ;	Return value of _frexp is never used
  2210  007344  0012               	return	
  2211  007346                     l558:
  2212  007346  5003               	movf	frexp@value+2,w,c
  2213  007348  0B7F               	andlw	127
  2214  00734A  6E06               	movwf	??_frexp& (0+255),c
  2215  00734C  6A07               	clrf	(??_frexp+1)& (0+255),c
  2216  00734E  90D8               	bcf	status,0,c
  2217  007350  3606               	rlcf	??_frexp,f,c
  2218  007352  3607               	rlcf	??_frexp+1,f,c
  2219  007354  C004  FFD9         	movff	frexp@eptr,fsr2l
  2220  007358  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2221  00735C  C006  FFDE         	movff	??_frexp,postinc2
  2222  007360  C007  FFDD         	movff	??_frexp+1,postdec2
  2223  007364  AE02               	btfss	frexp@value+1,7,c
  2224  007366  D003               	goto	u1410
  2225  007368  6A06               	clrf	??_frexp& (0+255),c
  2226  00736A  2A06               	incf	??_frexp& (0+255),f,c
  2227  00736C  D001               	goto	u1418
  2228  00736E                     u1410:
  2229  00736E  6A06               	clrf	??_frexp& (0+255),c
  2230  007370                     u1418:
  2231  007370  5006               	movf	??_frexp,w,c
  2232  007372  C004  FFD9         	movff	frexp@eptr,fsr2l
  2233  007376  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2234  00737A  12DE               	iorwf	postinc2,f,c
  2235  00737C  0E00               	movlw	0
  2236  00737E  12DD               	iorwf	postdec2,f,c
  2237  007380  C004  FFD9         	movff	frexp@eptr,fsr2l
  2238  007384  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2239  007388  0E82               	movlw	130
  2240  00738A  26DE               	addwf	postinc2,f,c
  2241  00738C  0EFF               	movlw	255
  2242  00738E  22DD               	addwfc	postdec2,f,c
  2243  007390  8003               	bsf	frexp@value+2,0,c
  2244  007392  8203               	bsf	frexp@value+2,1,c
  2245  007394  8403               	bsf	frexp@value+2,2,c
  2246  007396  8603               	bsf	frexp@value+2,3,c
  2247  007398  8803               	bsf	frexp@value+2,4,c
  2248  00739A  8A03               	bsf	frexp@value+2,5,c
  2249  00739C  9C03               	bcf	frexp@value+2,6,c
  2250  00739E  9E02               	bcf	frexp@value+1,7,c
  2251  0073A0  0012               	return	
  2252  0073A2                     __end_of_frexp:
  2253                           	opt stack 0
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           postdec1	equ	0xFE5
  2261                           fsr1l	equ	0xFE1
  2262                           indf2	equ	0xFDF
  2263                           postinc2	equ	0xFDE
  2264                           postdec2	equ	0xFDD
  2265                           fsr2h	equ	0xFDA
  2266                           fsr2l	equ	0xFD9
  2267                           status	equ	0xFD8
  2268                           
  2269 ;; *************** function ___fttol *****************
  2270 ;; Defined at:
  2271 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  f1              3   30[COMRAM] float 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  lval            4   40[COMRAM] unsigned long 
  2276 ;;  exp1            1   44[COMRAM] unsigned char 
  2277 ;;  sign1           1   39[COMRAM] unsigned char 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  4   30[COMRAM] long 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2, status,0
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2287 ;;      Params:         4       0       0       0       0       0       0       0       0
  2288 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2289 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2290 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2291 ;;Total ram usage:       15 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_increasePWM
  2297 ;;		_decreasePWM
  2298 ;;		_ceil
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text17
  2303  00777E                     __ptext17:
  2304                           	opt stack 0
  2305  00777E                     ___fttol:
  2306                           	opt stack 28
  2307                           
  2308                           ;incstack = 0
  2309  00777E  C021  F023         	movff	___fttol@f1+2,??___fttol
  2310  007782  6A24               	clrf	(??___fttol+1)& (0+255),c
  2311  007784  6A25               	clrf	(??___fttol+2)& (0+255),c
  2312  007786  3420               	rlcf	___fttol@f1+1,w,c
  2313  007788  3623               	rlcf	??___fttol& (0+255),f,c
  2314  00778A  E301               	bnc	u1451
  2315  00778C  8024               	bsf	(??___fttol+1)& (0+255),0,c
  2316  00778E                     u1451:
  2317  00778E  5023               	movf	??___fttol,w,c
  2318  007790  6E2D               	movwf	___fttol@exp1,c
  2319  007792  502D               	movf	___fttol@exp1,w,c
  2320  007794  A4D8               	btfss	status,2,c
  2321  007796  D009               	goto	l643
  2322  007798  0E00               	movlw	0
  2323  00779A  6E1F               	movwf	?___fttol,c
  2324  00779C  0E00               	movlw	0
  2325  00779E  6E20               	movwf	?___fttol+1,c
  2326  0077A0  0E00               	movlw	0
  2327  0077A2  6E21               	movwf	?___fttol+2,c
  2328  0077A4  0E00               	movlw	0
  2329  0077A6  6E22               	movwf	?___fttol+3,c
  2330  0077A8  0012               	return	
  2331  0077AA                     l643:
  2332  0077AA  0E17               	movlw	23
  2333  0077AC  6E23               	movwf	??___fttol& (0+255),c
  2334  0077AE  C01F  F024         	movff	___fttol@f1,??___fttol+1
  2335  0077B2  C020  F025         	movff	___fttol@f1+1,??___fttol+2
  2336  0077B6  C021  F026         	movff	___fttol@f1+2,??___fttol+3
  2337  0077BA  2823               	incf	??___fttol,w,c
  2338  0077BC  6E27               	movwf	(??___fttol+4)& (0+255),c
  2339  0077BE  D004               	goto	u1470
  2340  0077C0                     u1475:
  2341  0077C0  90D8               	bcf	status,0,c
  2342  0077C2  3226               	rrcf	??___fttol+3,f,c
  2343  0077C4  3225               	rrcf	??___fttol+2,f,c
  2344  0077C6  3224               	rrcf	??___fttol+1,f,c
  2345  0077C8                     u1470:
  2346  0077C8  2E27               	decfsz	(??___fttol+4)& (0+255),f,c
  2347  0077CA  D7FA               	goto	u1475
  2348  0077CC  5024               	movf	??___fttol+1,w,c
  2349  0077CE  6E28               	movwf	___fttol@sign1,c
  2350  0077D0  8E20               	bsf	___fttol@f1+1,7,c
  2351  0077D2  0EFF               	movlw	255
  2352  0077D4  161F               	andwf	___fttol@f1,f,c
  2353  0077D6  0EFF               	movlw	255
  2354  0077D8  1620               	andwf	___fttol@f1+1,f,c
  2355  0077DA  0E00               	movlw	0
  2356  0077DC  1621               	andwf	___fttol@f1+2,f,c
  2357  0077DE  501F               	movf	___fttol@f1,w,c
  2358  0077E0  6E29               	movwf	___fttol@lval,c
  2359  0077E2  5020               	movf	___fttol@f1+1,w,c
  2360  0077E4  6E2A               	movwf	___fttol@lval+1,c
  2361  0077E6  5021               	movf	___fttol@f1+2,w,c
  2362  0077E8  6E2B               	movwf	___fttol@lval+2,c
  2363  0077EA  6A2C               	clrf	___fttol@lval+3,c
  2364  0077EC  0E8E               	movlw	142
  2365  0077EE  5E2D               	subwf	___fttol@exp1,f,c
  2366  0077F0  AE2D               	btfss	___fttol@exp1,7,c
  2367  0077F2  D016               	goto	l645
  2368  0077F4  502D               	movf	___fttol@exp1,w,c
  2369  0077F6  0A80               	xorlw	128
  2370  0077F8  0F8F               	addlw	143
  2371  0077FA  B0D8               	btfsc	status,0,c
  2372  0077FC  D009               	goto	l646
  2373  0077FE  0E00               	movlw	0
  2374  007800  6E1F               	movwf	?___fttol,c
  2375  007802  0E00               	movlw	0
  2376  007804  6E20               	movwf	?___fttol+1,c
  2377  007806  0E00               	movlw	0
  2378  007808  6E21               	movwf	?___fttol+2,c
  2379  00780A  0E00               	movlw	0
  2380  00780C  6E22               	movwf	?___fttol+3,c
  2381  00780E  0012               	return	
  2382  007810                     l646:
  2383  007810  90D8               	bcf	status,0,c
  2384  007812  322C               	rrcf	___fttol@lval+3,f,c
  2385  007814  322B               	rrcf	___fttol@lval+2,f,c
  2386  007816  322A               	rrcf	___fttol@lval+1,f,c
  2387  007818  3229               	rrcf	___fttol@lval,f,c
  2388  00781A  3E2D               	incfsz	___fttol@exp1,f,c
  2389  00781C  D7F9               	goto	l646
  2390  00781E  D015               	goto	u1510
  2391  007820                     l645:
  2392  007820  0E17               	movlw	23
  2393  007822  642D               	cpfsgt	___fttol@exp1,c
  2394  007824  D00F               	goto	l651
  2395  007826  0E00               	movlw	0
  2396  007828  6E1F               	movwf	?___fttol,c
  2397  00782A  0E00               	movlw	0
  2398  00782C  6E20               	movwf	?___fttol+1,c
  2399  00782E  0E00               	movlw	0
  2400  007830  6E21               	movwf	?___fttol+2,c
  2401  007832  0E00               	movlw	0
  2402  007834  6E22               	movwf	?___fttol+3,c
  2403  007836  0012               	return	
  2404  007838  90D8               	bcf	status,0,c
  2405  00783A  3629               	rlcf	___fttol@lval,f,c
  2406  00783C  362A               	rlcf	___fttol@lval+1,f,c
  2407  00783E  362B               	rlcf	___fttol@lval+2,f,c
  2408  007840  362C               	rlcf	___fttol@lval+3,f,c
  2409  007842  062D               	decf	___fttol@exp1,f,c
  2410  007844                     l651:
  2411  007844  502D               	movf	___fttol@exp1,w,c
  2412  007846  A4D8               	btfss	status,2,c
  2413  007848  D7F7               	goto	l652
  2414  00784A                     u1510:
  2415  00784A  5028               	movf	___fttol@sign1,w,c
  2416  00784C  B4D8               	btfsc	status,2,c
  2417  00784E  D008               	goto	l654
  2418  007850  1E2C               	comf	___fttol@lval+3,f,c
  2419  007852  1E2B               	comf	___fttol@lval+2,f,c
  2420  007854  1E2A               	comf	___fttol@lval+1,f,c
  2421  007856  6C29               	negf	___fttol@lval,c
  2422  007858  0E00               	movlw	0
  2423  00785A  222A               	addwfc	___fttol@lval+1,f,c
  2424  00785C  222B               	addwfc	___fttol@lval+2,f,c
  2425  00785E  222C               	addwfc	___fttol@lval+3,f,c
  2426  007860                     l654:
  2427  007860  C029  F01F         	movff	___fttol@lval,?___fttol
  2428  007864  C02A  F020         	movff	___fttol@lval+1,?___fttol+1
  2429  007868  C02B  F021         	movff	___fttol@lval+2,?___fttol+2
  2430  00786C  C02C  F022         	movff	___fttol@lval+3,?___fttol+3
  2431  007870  0012               	return	
  2432  007872                     __end_of___fttol:
  2433                           	opt stack 0
  2434                           tblptru	equ	0xFF8
  2435                           tblptrh	equ	0xFF7
  2436                           tblptrl	equ	0xFF6
  2437                           tablat	equ	0xFF5
  2438                           postinc0	equ	0xFEE
  2439                           wreg	equ	0xFE8
  2440                           postdec1	equ	0xFE5
  2441                           fsr1l	equ	0xFE1
  2442                           indf2	equ	0xFDF
  2443                           postinc2	equ	0xFDE
  2444                           postdec2	equ	0xFDD
  2445                           fsr2h	equ	0xFDA
  2446                           fsr2l	equ	0xFD9
  2447                           status	equ	0xFD8
  2448                           
  2449 ;; *************** function ___ftge *****************
  2450 ;; Defined at:
  2451 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  ff1             3    0[COMRAM] float 
  2454 ;;  ff2             3    3[COMRAM] float 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;		None               void
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2466 ;;      Params:         6       0       0       0       0       0       0       0       0
  2467 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2468 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2469 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2470 ;;Total ram usage:        9 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_ceil
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text18
  2480  00749E                     __ptext18:
  2481                           	opt stack 0
  2482  00749E                     ___ftge:
  2483                           	opt stack 28
  2484                           
  2485                           ;incstack = 0
  2486  00749E  AE03               	btfss	___ftge@ff1+2,7,c
  2487  0074A0  D016               	goto	l615
  2488  0074A2  C001  F007         	movff	___ftge@ff1,??___ftge
  2489  0074A6  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  2490  0074AA  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  2491  0074AE  1E07               	comf	??___ftge,f,c
  2492  0074B0  1E08               	comf	??___ftge+1,f,c
  2493  0074B2  1E09               	comf	??___ftge+2,f,c
  2494  0074B4  2A07               	incf	??___ftge,f,c
  2495  0074B6  0E00               	movlw	0
  2496  0074B8  2208               	addwfc	??___ftge+1,f,c
  2497  0074BA  2209               	addwfc	??___ftge+2,f,c
  2498  0074BC  0E00               	movlw	0
  2499  0074BE  2407               	addwf	??___ftge,w,c
  2500  0074C0  6E01               	movwf	___ftge@ff1,c
  2501  0074C2  0E00               	movlw	0
  2502  0074C4  2008               	addwfc	??___ftge+1,w,c
  2503  0074C6  6E02               	movwf	___ftge@ff1+1,c
  2504  0074C8  0E80               	movlw	128
  2505  0074CA  2009               	addwfc	??___ftge+2,w,c
  2506  0074CC  6E03               	movwf	___ftge@ff1+2,c
  2507  0074CE                     l615:
  2508  0074CE  AE06               	btfss	___ftge@ff2+2,7,c
  2509  0074D0  D016               	goto	l616
  2510  0074D2  C004  F007         	movff	___ftge@ff2,??___ftge
  2511  0074D6  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  2512  0074DA  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  2513  0074DE  1E07               	comf	??___ftge,f,c
  2514  0074E0  1E08               	comf	??___ftge+1,f,c
  2515  0074E2  1E09               	comf	??___ftge+2,f,c
  2516  0074E4  2A07               	incf	??___ftge,f,c
  2517  0074E6  0E00               	movlw	0
  2518  0074E8  2208               	addwfc	??___ftge+1,f,c
  2519  0074EA  2209               	addwfc	??___ftge+2,f,c
  2520  0074EC  0E00               	movlw	0
  2521  0074EE  2407               	addwf	??___ftge,w,c
  2522  0074F0  6E04               	movwf	___ftge@ff2,c
  2523  0074F2  0E00               	movlw	0
  2524  0074F4  2008               	addwfc	??___ftge+1,w,c
  2525  0074F6  6E05               	movwf	___ftge@ff2+1,c
  2526  0074F8  0E80               	movlw	128
  2527  0074FA  2009               	addwfc	??___ftge+2,w,c
  2528  0074FC  6E06               	movwf	___ftge@ff2+2,c
  2529  0074FE                     l616:
  2530  0074FE  0E00               	movlw	0
  2531  007500  1A01               	xorwf	___ftge@ff1,f,c
  2532  007502  0E00               	movlw	0
  2533  007504  1A02               	xorwf	___ftge@ff1+1,f,c
  2534  007506  0E80               	movlw	128
  2535  007508  1A03               	xorwf	___ftge@ff1+2,f,c
  2536  00750A  0E00               	movlw	0
  2537  00750C  1A04               	xorwf	___ftge@ff2,f,c
  2538  00750E  0E00               	movlw	0
  2539  007510  1A05               	xorwf	___ftge@ff2+1,f,c
  2540  007512  0E80               	movlw	128
  2541  007514  1A06               	xorwf	___ftge@ff2+2,f,c
  2542  007516  5004               	movf	___ftge@ff2,w,c
  2543  007518  5C01               	subwf	___ftge@ff1,w,c
  2544  00751A  5005               	movf	___ftge@ff2+1,w,c
  2545  00751C  5802               	subwfb	___ftge@ff1+1,w,c
  2546  00751E  5006               	movf	___ftge@ff2+2,w,c
  2547  007520  5803               	subwfb	___ftge@ff1+2,w,c
  2548  007522  B0D8               	btfsc	status,0,c
  2549  007524  D002               	goto	l1638
  2550  007526  90D8               	bcf	status,0,c
  2551  007528  0012               	return	
  2552  00752A                     l1638:
  2553  00752A  80D8               	bsf	status,0,c
  2554  00752C  0012               	return	
  2555  00752E                     __end_of___ftge:
  2556                           	opt stack 0
  2557                           tblptru	equ	0xFF8
  2558                           tblptrh	equ	0xFF7
  2559                           tblptrl	equ	0xFF6
  2560                           tablat	equ	0xFF5
  2561                           postinc0	equ	0xFEE
  2562                           wreg	equ	0xFE8
  2563                           postdec1	equ	0xFE5
  2564                           fsr1l	equ	0xFE1
  2565                           indf2	equ	0xFDF
  2566                           postinc2	equ	0xFDE
  2567                           postdec2	equ	0xFDD
  2568                           fsr2h	equ	0xFDA
  2569                           fsr2l	equ	0xFD9
  2570                           status	equ	0xFD8
  2571                           
  2572 ;; *************** function ___ftadd *****************
  2573 ;; Defined at:
  2574 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  f1              3   18[COMRAM] float 
  2577 ;;  f2              3   21[COMRAM] float 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  exp1            1   29[COMRAM] unsigned char 
  2580 ;;  exp2            1   28[COMRAM] unsigned char 
  2581 ;;  sign            1   27[COMRAM] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  3   18[COMRAM] float 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2591 ;;      Params:         6       0       0       0       0       0       0       0       0
  2592 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2593 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2594 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2595 ;;Total ram usage:       12 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    1
  2598 ;; This function calls:
  2599 ;;		___ftpack
  2600 ;; This function is called by:
  2601 ;;		_increasePWM
  2602 ;;		_decreasePWM
  2603 ;;		_ceil
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text19
  2608  00796A                     __ptext19:
  2609                           	opt stack 0
  2610  00796A                     ___ftadd:
  2611                           	opt stack 27
  2612                           
  2613                           ;incstack = 0
  2614  00796A  C015  F019         	movff	___ftadd@f1+2,??___ftadd
  2615  00796E  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  2616  007970  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  2617  007972  3414               	rlcf	___ftadd@f1+1,w,c
  2618  007974  3619               	rlcf	??___ftadd& (0+255),f,c
  2619  007976  E301               	bnc	u1191
  2620  007978  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  2621  00797A                     u1191:
  2622  00797A  5019               	movf	??___ftadd,w,c
  2623  00797C  6E1E               	movwf	___ftadd@exp1,c
  2624  00797E  C018  F019         	movff	___ftadd@f2+2,??___ftadd
  2625  007982  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  2626  007984  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  2627  007986  3417               	rlcf	___ftadd@f2+1,w,c
  2628  007988  3619               	rlcf	??___ftadd& (0+255),f,c
  2629  00798A  E301               	bnc	u1201
  2630  00798C  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  2631  00798E                     u1201:
  2632  00798E  5019               	movf	??___ftadd,w,c
  2633  007990  6E1D               	movwf	___ftadd@exp2,c
  2634  007992  501E               	movf	___ftadd@exp1,w,c
  2635  007994  B4D8               	btfsc	status,2,c
  2636  007996  D00B               	goto	u1230
  2637  007998  501D               	movf	___ftadd@exp2,w,c
  2638  00799A  5C1E               	subwf	___ftadd@exp1,w,c
  2639  00799C  B0D8               	btfsc	status,0,c
  2640  00799E  D00E               	goto	l574
  2641  0079A0  501E               	movf	___ftadd@exp1,w,c
  2642  0079A2  0800               	sublw	0
  2643  0079A4  241D               	addwf	___ftadd@exp2,w,c
  2644  0079A6  6E19               	movwf	??___ftadd& (0+255),c
  2645  0079A8  0E18               	movlw	24
  2646  0079AA  6419               	cpfsgt	??___ftadd,c
  2647  0079AC  D007               	goto	l574
  2648  0079AE                     u1230:
  2649  0079AE  C016  F013         	movff	___ftadd@f2,?___ftadd
  2650  0079B2  C017  F014         	movff	___ftadd@f2+1,?___ftadd+1
  2651  0079B6  C018  F015         	movff	___ftadd@f2+2,?___ftadd+2
  2652  0079BA  0012               	return	
  2653  0079BC                     l574:
  2654  0079BC  501D               	movf	___ftadd@exp2,w,c
  2655  0079BE  B4D8               	btfsc	status,2,c
  2656  0079C0  D00B               	goto	u1260
  2657  0079C2  501E               	movf	___ftadd@exp1,w,c
  2658  0079C4  5C1D               	subwf	___ftadd@exp2,w,c
  2659  0079C6  B0D8               	btfsc	status,0,c
  2660  0079C8  D00E               	goto	l578
  2661  0079CA  501D               	movf	___ftadd@exp2,w,c
  2662  0079CC  0800               	sublw	0
  2663  0079CE  241E               	addwf	___ftadd@exp1,w,c
  2664  0079D0  6E19               	movwf	??___ftadd& (0+255),c
  2665  0079D2  0E18               	movlw	24
  2666  0079D4  6419               	cpfsgt	??___ftadd,c
  2667  0079D6  D007               	goto	l578
  2668  0079D8                     u1260:
  2669  0079D8  C013  F013         	movff	___ftadd@f1,?___ftadd
  2670  0079DC  C014  F014         	movff	___ftadd@f1+1,?___ftadd+1
  2671  0079E0  C015  F015         	movff	___ftadd@f1+2,?___ftadd+2
  2672  0079E4  0012               	return	
  2673  0079E6                     l578:
  2674  0079E6  0E06               	movlw	6
  2675  0079E8  6E1C               	movwf	___ftadd@sign,c
  2676  0079EA  BE15               	btfsc	___ftadd@f1+2,7,c
  2677  0079EC  8E1C               	bsf	___ftadd@sign,7,c
  2678  0079EE  BE18               	btfsc	___ftadd@f2+2,7,c
  2679  0079F0  8C1C               	bsf	___ftadd@sign,6,c
  2680  0079F2  8E14               	bsf	___ftadd@f1+1,7,c
  2681  0079F4  0EFF               	movlw	255
  2682  0079F6  1613               	andwf	___ftadd@f1,f,c
  2683  0079F8  0EFF               	movlw	255
  2684  0079FA  1614               	andwf	___ftadd@f1+1,f,c
  2685  0079FC  0E00               	movlw	0
  2686  0079FE  1615               	andwf	___ftadd@f1+2,f,c
  2687  007A00  8E17               	bsf	___ftadd@f2+1,7,c
  2688  007A02  0EFF               	movlw	255
  2689  007A04  1616               	andwf	___ftadd@f2,f,c
  2690  007A06  0EFF               	movlw	255
  2691  007A08  1617               	andwf	___ftadd@f2+1,f,c
  2692  007A0A  0E00               	movlw	0
  2693  007A0C  1618               	andwf	___ftadd@f2+2,f,c
  2694  007A0E  501D               	movf	___ftadd@exp2,w,c
  2695  007A10  5C1E               	subwf	___ftadd@exp1,w,c
  2696  007A12  B0D8               	btfsc	status,0,c
  2697  007A14  D01B               	goto	l583
  2698  007A16                     u1290:
  2699  007A16  90D8               	bcf	status,0,c
  2700  007A18  3616               	rlcf	___ftadd@f2,f,c
  2701  007A1A  3617               	rlcf	___ftadd@f2+1,f,c
  2702  007A1C  3618               	rlcf	___ftadd@f2+2,f,c
  2703  007A1E  061D               	decf	___ftadd@exp2,f,c
  2704  007A20  501E               	movf	___ftadd@exp1,w,c
  2705  007A22  181D               	xorwf	___ftadd@exp2,w,c
  2706  007A24  B4D8               	btfsc	status,2,c
  2707  007A26  D00D               	goto	l588
  2708  007A28  061C               	decf	___ftadd@sign,f,c
  2709  007A2A  C01C  F019         	movff	___ftadd@sign,??___ftadd
  2710  007A2E  0E07               	movlw	7
  2711  007A30  1619               	andwf	??___ftadd,f,c
  2712  007A32  B4D8               	btfsc	status,2,c
  2713  007A34  D006               	goto	l588
  2714  007A36  D7EF               	goto	u1290
  2715  007A38  90D8               	bcf	status,0,c
  2716  007A3A  3215               	rrcf	___ftadd@f1+2,f,c
  2717  007A3C  3214               	rrcf	___ftadd@f1+1,f,c
  2718  007A3E  3213               	rrcf	___ftadd@f1,f,c
  2719  007A40  2A1E               	incf	___ftadd@exp1,f,c
  2720  007A42                     l588:
  2721  007A42  501D               	movf	___ftadd@exp2,w,c
  2722  007A44  181E               	xorwf	___ftadd@exp1,w,c
  2723  007A46  B4D8               	btfsc	status,2,c
  2724  007A48  D01F               	goto	u1360
  2725  007A4A  D7F6               	goto	l589
  2726  007A4C                     l583:
  2727  007A4C  501E               	movf	___ftadd@exp1,w,c
  2728  007A4E  5C1D               	subwf	___ftadd@exp2,w,c
  2729  007A50  B0D8               	btfsc	status,0,c
  2730  007A52  D01A               	goto	u1360
  2731  007A54                     u1330:
  2732  007A54  90D8               	bcf	status,0,c
  2733  007A56  3613               	rlcf	___ftadd@f1,f,c
  2734  007A58  3614               	rlcf	___ftadd@f1+1,f,c
  2735  007A5A  3615               	rlcf	___ftadd@f1+2,f,c
  2736  007A5C  061E               	decf	___ftadd@exp1,f,c
  2737  007A5E  501E               	movf	___ftadd@exp1,w,c
  2738  007A60  181D               	xorwf	___ftadd@exp2,w,c
  2739  007A62  B4D8               	btfsc	status,2,c
  2740  007A64  D00D               	goto	l597
  2741  007A66  061C               	decf	___ftadd@sign,f,c
  2742  007A68  C01C  F019         	movff	___ftadd@sign,??___ftadd
  2743  007A6C  0E07               	movlw	7
  2744  007A6E  1619               	andwf	??___ftadd,f,c
  2745  007A70  B4D8               	btfsc	status,2,c
  2746  007A72  D006               	goto	l597
  2747  007A74  D7EF               	goto	u1330
  2748  007A76  90D8               	bcf	status,0,c
  2749  007A78  3218               	rrcf	___ftadd@f2+2,f,c
  2750  007A7A  3217               	rrcf	___ftadd@f2+1,f,c
  2751  007A7C  3216               	rrcf	___ftadd@f2,f,c
  2752  007A7E  2A1D               	incf	___ftadd@exp2,f,c
  2753  007A80                     l597:
  2754  007A80  501D               	movf	___ftadd@exp2,w,c
  2755  007A82  181E               	xorwf	___ftadd@exp1,w,c
  2756  007A84  A4D8               	btfss	status,2,c
  2757  007A86  D7F7               	goto	l598
  2758  007A88                     u1360:
  2759  007A88  AE1C               	btfss	___ftadd@sign,7,c
  2760  007A8A  D00C               	goto	l600
  2761  007A8C  0EFF               	movlw	255
  2762  007A8E  1A13               	xorwf	___ftadd@f1,f,c
  2763  007A90  0EFF               	movlw	255
  2764  007A92  1A14               	xorwf	___ftadd@f1+1,f,c
  2765  007A94  0EFF               	movlw	255
  2766  007A96  1A15               	xorwf	___ftadd@f1+2,f,c
  2767  007A98  0E01               	movlw	1
  2768  007A9A  2613               	addwf	___ftadd@f1,f,c
  2769  007A9C  0E00               	movlw	0
  2770  007A9E  2214               	addwfc	___ftadd@f1+1,f,c
  2771  007AA0  0E00               	movlw	0
  2772  007AA2  2215               	addwfc	___ftadd@f1+2,f,c
  2773  007AA4                     l600:
  2774  007AA4  AC1C               	btfss	___ftadd@sign,6,c
  2775  007AA6  D00C               	goto	l601
  2776  007AA8  0EFF               	movlw	255
  2777  007AAA  1A16               	xorwf	___ftadd@f2,f,c
  2778  007AAC  0EFF               	movlw	255
  2779  007AAE  1A17               	xorwf	___ftadd@f2+1,f,c
  2780  007AB0  0EFF               	movlw	255
  2781  007AB2  1A18               	xorwf	___ftadd@f2+2,f,c
  2782  007AB4  0E01               	movlw	1
  2783  007AB6  2616               	addwf	___ftadd@f2,f,c
  2784  007AB8  0E00               	movlw	0
  2785  007ABA  2217               	addwfc	___ftadd@f2+1,f,c
  2786  007ABC  0E00               	movlw	0
  2787  007ABE  2218               	addwfc	___ftadd@f2+2,f,c
  2788  007AC0                     l601:
  2789  007AC0  0E00               	movlw	0
  2790  007AC2  6E1C               	movwf	___ftadd@sign,c
  2791  007AC4  5013               	movf	___ftadd@f1,w,c
  2792  007AC6  2616               	addwf	___ftadd@f2,f,c
  2793  007AC8  5014               	movf	___ftadd@f1+1,w,c
  2794  007ACA  2217               	addwfc	___ftadd@f2+1,f,c
  2795  007ACC  5015               	movf	___ftadd@f1+2,w,c
  2796  007ACE  2218               	addwfc	___ftadd@f2+2,f,c
  2797  007AD0  AE18               	btfss	___ftadd@f2+2,7,c
  2798  007AD2  D00E               	goto	l602
  2799  007AD4  0EFF               	movlw	255
  2800  007AD6  1A16               	xorwf	___ftadd@f2,f,c
  2801  007AD8  0EFF               	movlw	255
  2802  007ADA  1A17               	xorwf	___ftadd@f2+1,f,c
  2803  007ADC  0EFF               	movlw	255
  2804  007ADE  1A18               	xorwf	___ftadd@f2+2,f,c
  2805  007AE0  0E01               	movlw	1
  2806  007AE2  2616               	addwf	___ftadd@f2,f,c
  2807  007AE4  0E00               	movlw	0
  2808  007AE6  2217               	addwfc	___ftadd@f2+1,f,c
  2809  007AE8  0E00               	movlw	0
  2810  007AEA  2218               	addwfc	___ftadd@f2+2,f,c
  2811  007AEC  0E01               	movlw	1
  2812  007AEE  6E1C               	movwf	___ftadd@sign,c
  2813  007AF0                     l602:
  2814  007AF0  C016  F001         	movff	___ftadd@f2,___ftpack@arg
  2815  007AF4  C017  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2816  007AF8  C018  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2817  007AFC  C01E  F004         	movff	___ftadd@exp1,___ftpack@exp
  2818  007B00  C01C  F005         	movff	___ftadd@sign,___ftpack@sign
  2819  007B04  EC97  F03A         	call	___ftpack	;wreg free
  2820  007B08  C001  F013         	movff	?___ftpack,?___ftadd
  2821  007B0C  C002  F014         	movff	?___ftpack+1,?___ftadd+1
  2822  007B10  C003  F015         	movff	?___ftpack+2,?___ftadd+2
  2823  007B14  0012               	return	
  2824  007B16                     __end_of___ftadd:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           postinc0	equ	0xFEE
  2831                           wreg	equ	0xFE8
  2832                           postdec1	equ	0xFE5
  2833                           fsr1l	equ	0xFE1
  2834                           indf2	equ	0xFDF
  2835                           postinc2	equ	0xFDE
  2836                           postdec2	equ	0xFDD
  2837                           fsr2h	equ	0xFDA
  2838                           fsr2l	equ	0xFD9
  2839                           status	equ	0xFD8
  2840                           
  2841 ;; *************** function ___altoft *****************
  2842 ;; Defined at:
  2843 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  c               4   45[COMRAM] long 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  sign            1   54[COMRAM] unsigned char 
  2848 ;;  exp             1   53[COMRAM] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  3   45[COMRAM] float 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2858 ;;      Params:         4       0       0       0       0       0       0       0       0
  2859 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2860 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2861 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2862 ;;Total ram usage:       10 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    1
  2865 ;; This function calls:
  2866 ;;		___ftpack
  2867 ;; This function is called by:
  2868 ;;		_ceil
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text20
  2873  0072B2                     __ptext20:
  2874                           	opt stack 0
  2875  0072B2                     ___altoft:
  2876                           	opt stack 27
  2877                           
  2878                           ;incstack = 0
  2879  0072B2  0E00               	movlw	0
  2880  0072B4  6E37               	movwf	___altoft@sign,c
  2881  0072B6  0E8E               	movlw	142
  2882  0072B8  6E36               	movwf	___altoft@exp,c
  2883  0072BA  AE31               	btfss	___altoft@c+3,7,c
  2884  0072BC  D011               	goto	l387
  2885  0072BE  1E31               	comf	___altoft@c+3,f,c
  2886  0072C0  1E30               	comf	___altoft@c+2,f,c
  2887  0072C2  1E2F               	comf	___altoft@c+1,f,c
  2888  0072C4  6C2E               	negf	___altoft@c,c
  2889  0072C6  0E00               	movlw	0
  2890  0072C8  222F               	addwfc	___altoft@c+1,f,c
  2891  0072CA  2230               	addwfc	___altoft@c+2,f,c
  2892  0072CC  2231               	addwfc	___altoft@c+3,f,c
  2893  0072CE  0E01               	movlw	1
  2894  0072D0  6E37               	movwf	___altoft@sign,c
  2895  0072D2  D006               	goto	l387
  2896  0072D4  90D8               	bcf	status,0,c
  2897  0072D6  3231               	rrcf	___altoft@c+3,f,c
  2898  0072D8  3230               	rrcf	___altoft@c+2,f,c
  2899  0072DA  322F               	rrcf	___altoft@c+1,f,c
  2900  0072DC  322E               	rrcf	___altoft@c,f,c
  2901  0072DE  2A36               	incf	___altoft@exp,f,c
  2902  0072E0                     l387:
  2903  0072E0  0E00               	movlw	0
  2904  0072E2  142E               	andwf	___altoft@c,w,c
  2905  0072E4  6E32               	movwf	??___altoft& (0+255),c
  2906  0072E6  0E00               	movlw	0
  2907  0072E8  142F               	andwf	___altoft@c+1,w,c
  2908  0072EA  6E33               	movwf	(??___altoft+1)& (0+255),c
  2909  0072EC  0E00               	movlw	0
  2910  0072EE  1430               	andwf	___altoft@c+2,w,c
  2911  0072F0  6E34               	movwf	(??___altoft+2)& (0+255),c
  2912  0072F2  0EFF               	movlw	255
  2913  0072F4  1431               	andwf	___altoft@c+3,w,c
  2914  0072F6  6E35               	movwf	(??___altoft+3)& (0+255),c
  2915  0072F8  5032               	movf	??___altoft,w,c
  2916  0072FA  1033               	iorwf	??___altoft+1,w,c
  2917  0072FC  1034               	iorwf	??___altoft+2,w,c
  2918  0072FE  1035               	iorwf	??___altoft+3,w,c
  2919  007300  A4D8               	btfss	status,2,c
  2920  007302  D7E8               	goto	l388
  2921  007304  C02E  F001         	movff	___altoft@c,___ftpack@arg
  2922  007308  C02F  F002         	movff	___altoft@c+1,___ftpack@arg+1
  2923  00730C  C030  F003         	movff	___altoft@c+2,___ftpack@arg+2
  2924  007310  C036  F004         	movff	___altoft@exp,___ftpack@exp
  2925  007314  C037  F005         	movff	___altoft@sign,___ftpack@sign
  2926  007318  EC97  F03A         	call	___ftpack	;wreg free
  2927  00731C  C001  F02E         	movff	?___ftpack,?___altoft
  2928  007320  C002  F02F         	movff	?___ftpack+1,?___altoft+1
  2929  007324  C003  F030         	movff	?___ftpack+2,?___altoft+2
  2930  007328  0012               	return	
  2931  00732A                     __end_of___altoft:
  2932                           	opt stack 0
  2933                           tblptru	equ	0xFF8
  2934                           tblptrh	equ	0xFF7
  2935                           tblptrl	equ	0xFF6
  2936                           tablat	equ	0xFF5
  2937                           postinc0	equ	0xFEE
  2938                           wreg	equ	0xFE8
  2939                           postdec1	equ	0xFE5
  2940                           fsr1l	equ	0xFE1
  2941                           indf2	equ	0xFDF
  2942                           postinc2	equ	0xFDE
  2943                           postdec2	equ	0xFDD
  2944                           fsr2h	equ	0xFDA
  2945                           fsr2l	equ	0xFD9
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function ___wmul *****************
  2949 ;; Defined at:
  2950 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  multiplier      2    0[COMRAM] unsigned int 
  2953 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  product         2    4[COMRAM] unsigned int 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  2    0[COMRAM] unsigned int 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0, prodl, prodh
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2965 ;;      Params:         4       0       0       0       0       0       0       0       0
  2966 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2968 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2969 ;;Total ram usage:        6 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_increasePWM
  2975 ;;		_decreasePWM
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text21
  2980  00709C                     __ptext21:
  2981                           	opt stack 0
  2982  00709C                     ___wmul:
  2983                           	opt stack 29
  2984                           
  2985                           ;incstack = 0
  2986  00709C  5001               	movf	___wmul@multiplier,w,c
  2987  00709E  0203               	mulwf	___wmul@multiplicand,c
  2988  0070A0  CFF3 F005          	movff	prodl,___wmul@product
  2989  0070A4  CFF4 F006          	movff	prodh,___wmul@product+1
  2990  0070A8  5001               	movf	___wmul@multiplier,w,c
  2991  0070AA  0204               	mulwf	___wmul@multiplicand+1,c
  2992  0070AC  50F3               	movf	prodl,w,c
  2993  0070AE  2606               	addwf	___wmul@product+1,f,c
  2994  0070B0  5002               	movf	___wmul@multiplier+1,w,c
  2995  0070B2  0203               	mulwf	___wmul@multiplicand,c
  2996  0070B4  50F3               	movf	prodl,w,c
  2997  0070B6  2606               	addwf	___wmul@product+1,f,c
  2998  0070B8  C005  F001         	movff	___wmul@product,?___wmul
  2999  0070BC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3000  0070C0  0012               	return	
  3001  0070C2                     __end_of___wmul:
  3002                           	opt stack 0
  3003                           tblptru	equ	0xFF8
  3004                           tblptrh	equ	0xFF7
  3005                           tblptrl	equ	0xFF6
  3006                           tablat	equ	0xFF5
  3007                           prodh	equ	0xFF4
  3008                           prodl	equ	0xFF3
  3009                           postinc0	equ	0xFEE
  3010                           wreg	equ	0xFE8
  3011                           postdec1	equ	0xFE5
  3012                           fsr1l	equ	0xFE1
  3013                           indf2	equ	0xFDF
  3014                           postinc2	equ	0xFDE
  3015                           postdec2	equ	0xFDD
  3016                           fsr2h	equ	0xFDA
  3017                           fsr2l	equ	0xFD9
  3018                           status	equ	0xFD8
  3019                           
  3020 ;; *************** function ___ftneg *****************
  3021 ;; Defined at:
  3022 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  f1              3   63[COMRAM] float 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  3   63[COMRAM] float 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3036 ;;      Params:         3       0       0       0       0       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3039 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3040 ;;Total ram usage:        3 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_increasePWM
  3046 ;;		_decreasePWM
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text22
  3051  007078                     __ptext22:
  3052                           	opt stack 0
  3053  007078                     ___ftneg:
  3054                           	opt stack 29
  3055                           
  3056                           ;incstack = 0
  3057  007078  5040               	movf	___ftneg@f1,w,c
  3058  00707A  1041               	iorwf	___ftneg@f1+1,w,c
  3059  00707C  1042               	iorwf	___ftneg@f1+2,w,c
  3060  00707E  B4D8               	btfsc	status,2,c
  3061  007080  D006               	goto	l633
  3062  007082  0E00               	movlw	0
  3063  007084  1A40               	xorwf	___ftneg@f1,f,c
  3064  007086  0E00               	movlw	0
  3065  007088  1A41               	xorwf	___ftneg@f1+1,f,c
  3066  00708A  0E80               	movlw	128
  3067  00708C  1A42               	xorwf	___ftneg@f1+2,f,c
  3068  00708E                     l633:
  3069  00708E  C040  F040         	movff	___ftneg@f1,?___ftneg
  3070  007092  C041  F041         	movff	___ftneg@f1+1,?___ftneg+1
  3071  007096  C042  F042         	movff	___ftneg@f1+2,?___ftneg+2
  3072  00709A  0012               	return		;funcret
  3073  00709C                     __end_of___ftneg:
  3074                           	opt stack 0
  3075                           tblptru	equ	0xFF8
  3076                           tblptrh	equ	0xFF7
  3077                           tblptrl	equ	0xFF6
  3078                           tablat	equ	0xFF5
  3079                           prodh	equ	0xFF4
  3080                           prodl	equ	0xFF3
  3081                           postinc0	equ	0xFEE
  3082                           wreg	equ	0xFE8
  3083                           postdec1	equ	0xFE5
  3084                           fsr1l	equ	0xFE1
  3085                           indf2	equ	0xFDF
  3086                           postinc2	equ	0xFDE
  3087                           postdec2	equ	0xFDD
  3088                           fsr2h	equ	0xFDA
  3089                           fsr2l	equ	0xFD9
  3090                           status	equ	0xFD8
  3091                           
  3092 ;; *************** function ___awtoft *****************
  3093 ;; Defined at:
  3094 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  c               2   14[COMRAM] int 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  sign            1   17[COMRAM] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  3   14[COMRAM] float 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3108 ;;      Params:         3       0       0       0       0       0       0       0       0
  3109 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3111 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3112 ;;Total ram usage:        4 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    1
  3115 ;; This function calls:
  3116 ;;		___ftpack
  3117 ;; This function is called by:
  3118 ;;		_increasePWM
  3119 ;;		_decreasePWM
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text23
  3124  00714E                     __ptext23:
  3125                           	opt stack 0
  3126  00714E                     ___awtoft:
  3127                           	opt stack 28
  3128                           
  3129                           ;incstack = 0
  3130  00714E  0E00               	movlw	0
  3131  007150  6E12               	movwf	___awtoft@sign,c
  3132  007152  AE10               	btfss	___awtoft@c+1,7,c
  3133  007154  D006               	goto	l498
  3134  007156  6C0F               	negf	___awtoft@c,c
  3135  007158  1E10               	comf	___awtoft@c+1,f,c
  3136  00715A  B0D8               	btfsc	status,0,c
  3137  00715C  2A10               	incf	___awtoft@c+1,f,c
  3138  00715E  0E01               	movlw	1
  3139  007160  6E12               	movwf	___awtoft@sign,c
  3140  007162                     l498:
  3141  007162  C00F  F001         	movff	___awtoft@c,___ftpack@arg
  3142  007166  C010  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  3143  00716A  6A03               	clrf	___ftpack@arg+2,c
  3144  00716C  0E8E               	movlw	142
  3145  00716E  6E04               	movwf	___ftpack@exp,c
  3146  007170  C012  F005         	movff	___awtoft@sign,___ftpack@sign
  3147  007174  EC97  F03A         	call	___ftpack	;wreg free
  3148  007178  C001  F00F         	movff	?___ftpack,?___awtoft
  3149  00717C  C002  F010         	movff	?___ftpack+1,?___awtoft+1
  3150  007180  C003  F011         	movff	?___ftpack+2,?___awtoft+2
  3151  007184  0012               	return	
  3152  007186                     __end_of___awtoft:
  3153                           	opt stack 0
  3154                           tblptru	equ	0xFF8
  3155                           tblptrh	equ	0xFF7
  3156                           tblptrl	equ	0xFF6
  3157                           tablat	equ	0xFF5
  3158                           prodh	equ	0xFF4
  3159                           prodl	equ	0xFF3
  3160                           postinc0	equ	0xFEE
  3161                           wreg	equ	0xFE8
  3162                           postdec1	equ	0xFE5
  3163                           fsr1l	equ	0xFE1
  3164                           indf2	equ	0xFDF
  3165                           postinc2	equ	0xFDE
  3166                           postdec2	equ	0xFDD
  3167                           fsr2h	equ	0xFDA
  3168                           fsr2l	equ	0xFD9
  3169                           status	equ	0xFD8
  3170                           
  3171 ;; *************** function ___ftpack *****************
  3172 ;; Defined at:
  3173 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  arg             3    0[COMRAM] unsigned um
  3176 ;;  exp             1    3[COMRAM] unsigned char 
  3177 ;;  sign            1    4[COMRAM] unsigned char 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  3    0[COMRAM] float 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3189 ;;      Params:         5       0       0       0       0       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3191 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3192 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3193 ;;Total ram usage:        8 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		___altoft
  3199 ;;		___awtoft
  3200 ;;		___ftadd
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text24
  3205  00752E                     __ptext24:
  3206                           	opt stack 0
  3207  00752E                     ___ftpack:
  3208                           	opt stack 27
  3209                           
  3210                           ;incstack = 0
  3211  00752E  5004               	movf	___ftpack@exp,w,c
  3212  007530  B4D8               	btfsc	status,2,c
  3213  007532  D005               	goto	u1100
  3214  007534  5001               	movf	___ftpack@arg,w,c
  3215  007536  1002               	iorwf	___ftpack@arg+1,w,c
  3216  007538  1003               	iorwf	___ftpack@arg+2,w,c
  3217  00753A  A4D8               	btfss	status,2,c
  3218  00753C  D00C               	goto	l527
  3219  00753E                     u1100:
  3220  00753E  0E00               	movlw	0
  3221  007540  6E01               	movwf	?___ftpack,c
  3222  007542  0E00               	movlw	0
  3223  007544  6E02               	movwf	?___ftpack+1,c
  3224  007546  0E00               	movlw	0
  3225  007548  6E03               	movwf	?___ftpack+2,c
  3226  00754A  0012               	return	
  3227  00754C  2A04               	incf	___ftpack@exp,f,c
  3228  00754E  90D8               	bcf	status,0,c
  3229  007550  3203               	rrcf	___ftpack@arg+2,f,c
  3230  007552  3202               	rrcf	___ftpack@arg+1,f,c
  3231  007554  3201               	rrcf	___ftpack@arg,f,c
  3232  007556                     l527:
  3233  007556  0E00               	movlw	0
  3234  007558  1401               	andwf	___ftpack@arg,w,c
  3235  00755A  6E06               	movwf	??___ftpack& (0+255),c
  3236  00755C  0E00               	movlw	0
  3237  00755E  1402               	andwf	___ftpack@arg+1,w,c
  3238  007560  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3239  007562  0EFE               	movlw	254
  3240  007564  1403               	andwf	___ftpack@arg+2,w,c
  3241  007566  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3242  007568  5006               	movf	??___ftpack,w,c
  3243  00756A  1007               	iorwf	??___ftpack+1,w,c
  3244  00756C  1008               	iorwf	??___ftpack+2,w,c
  3245  00756E  B4D8               	btfsc	status,2,c
  3246  007570  D00C               	goto	l530
  3247  007572  D7EC               	goto	l528
  3248  007574  2A04               	incf	___ftpack@exp,f,c
  3249  007576  0E01               	movlw	1
  3250  007578  2601               	addwf	___ftpack@arg,f,c
  3251  00757A  0E00               	movlw	0
  3252  00757C  2202               	addwfc	___ftpack@arg+1,f,c
  3253  00757E  0E00               	movlw	0
  3254  007580  2203               	addwfc	___ftpack@arg+2,f,c
  3255  007582  90D8               	bcf	status,0,c
  3256  007584  3203               	rrcf	___ftpack@arg+2,f,c
  3257  007586  3202               	rrcf	___ftpack@arg+1,f,c
  3258  007588  3201               	rrcf	___ftpack@arg,f,c
  3259  00758A                     l530:
  3260  00758A  0E00               	movlw	0
  3261  00758C  1401               	andwf	___ftpack@arg,w,c
  3262  00758E  6E06               	movwf	??___ftpack& (0+255),c
  3263  007590  0E00               	movlw	0
  3264  007592  1402               	andwf	___ftpack@arg+1,w,c
  3265  007594  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3266  007596  0EFF               	movlw	255
  3267  007598  1403               	andwf	___ftpack@arg+2,w,c
  3268  00759A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3269  00759C  5006               	movf	??___ftpack,w,c
  3270  00759E  1007               	iorwf	??___ftpack+1,w,c
  3271  0075A0  1008               	iorwf	??___ftpack+2,w,c
  3272  0075A2  B4D8               	btfsc	status,2,c
  3273  0075A4  D006               	goto	l533
  3274  0075A6  D7E6               	goto	l531
  3275  0075A8  0604               	decf	___ftpack@exp,f,c
  3276  0075AA  90D8               	bcf	status,0,c
  3277  0075AC  3601               	rlcf	___ftpack@arg,f,c
  3278  0075AE  3602               	rlcf	___ftpack@arg+1,f,c
  3279  0075B0  3603               	rlcf	___ftpack@arg+2,f,c
  3280  0075B2                     l533:
  3281  0075B2  BE02               	btfsc	___ftpack@arg+1,7,c
  3282  0075B4  D003               	goto	u1140
  3283  0075B6  0E02               	movlw	2
  3284  0075B8  6004               	cpfslt	___ftpack@exp,c
  3285  0075BA  D7F6               	goto	l534
  3286  0075BC                     u1140:
  3287  0075BC  A004               	btfss	___ftpack@exp,0,c
  3288  0075BE  9E02               	bcf	___ftpack@arg+1,7,c
  3289  0075C0  90D8               	bcf	status,0,c
  3290  0075C2  3204               	rrcf	___ftpack@exp,f,c
  3291  0075C4  5004               	movf	___ftpack@exp,w,c
  3292  0075C6  1203               	iorwf	___ftpack@arg+2,f,c
  3293  0075C8  5005               	movf	___ftpack@sign,w,c
  3294  0075CA  A4D8               	btfss	status,2,c
  3295  0075CC  8E03               	bsf	___ftpack@arg+2,7,c
  3296  0075CE  C001  F001         	movff	___ftpack@arg,?___ftpack
  3297  0075D2  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3298  0075D6  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3299  0075DA  0012               	return	
  3300  0075DC                     __end_of___ftpack:
  3301                           	opt stack 0
  3302                           tblptru	equ	0xFF8
  3303                           tblptrh	equ	0xFF7
  3304                           tblptrl	equ	0xFF6
  3305                           tablat	equ	0xFF5
  3306                           prodh	equ	0xFF4
  3307                           prodl	equ	0xFF3
  3308                           postinc0	equ	0xFEE
  3309                           wreg	equ	0xFE8
  3310                           postdec1	equ	0xFE5
  3311                           fsr1l	equ	0xFE1
  3312                           indf2	equ	0xFDF
  3313                           postinc2	equ	0xFDE
  3314                           postdec2	equ	0xFDD
  3315                           fsr2h	equ	0xFDA
  3316                           fsr2l	equ	0xFD9
  3317                           status	equ	0xFD8
  3318                           
  3319 ;; *************** function ___awdiv *****************
  3320 ;; Defined at:
  3321 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  dividend        2    6[COMRAM] int 
  3324 ;;  divisor         2    8[COMRAM] int 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  quotient        2   12[COMRAM] int 
  3327 ;;  sign            1   11[COMRAM] unsigned char 
  3328 ;;  counter         1   10[COMRAM] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2    6[COMRAM] int 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3338 ;;      Params:         4       0       0       0       0       0       0       0       0
  3339 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3341 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3342 ;;Total ram usage:        8 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_increasePWM
  3348 ;;		_decreasePWM
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text25
  3353  00741A                     __ptext25:
  3354                           	opt stack 0
  3355  00741A                     ___awdiv:
  3356                           	opt stack 29
  3357                           
  3358                           ;incstack = 0
  3359  00741A  0E00               	movlw	0
  3360  00741C  6E0C               	movwf	___awdiv@sign,c
  3361  00741E  AE0A               	btfss	___awdiv@divisor+1,7,c
  3362  007420  D006               	goto	l470
  3363  007422  6C09               	negf	___awdiv@divisor,c
  3364  007424  1E0A               	comf	___awdiv@divisor+1,f,c
  3365  007426  B0D8               	btfsc	status,0,c
  3366  007428  2A0A               	incf	___awdiv@divisor+1,f,c
  3367  00742A  0E01               	movlw	1
  3368  00742C  6E0C               	movwf	___awdiv@sign,c
  3369  00742E                     l470:
  3370  00742E  AE08               	btfss	___awdiv@dividend+1,7,c
  3371  007430  D006               	goto	l471
  3372  007432  6C07               	negf	___awdiv@dividend,c
  3373  007434  1E08               	comf	___awdiv@dividend+1,f,c
  3374  007436  B0D8               	btfsc	status,0,c
  3375  007438  2A08               	incf	___awdiv@dividend+1,f,c
  3376  00743A  0E01               	movlw	1
  3377  00743C  1A0C               	xorwf	___awdiv@sign,f,c
  3378  00743E                     l471:
  3379  00743E  0E00               	movlw	0
  3380  007440  6E0E               	movwf	___awdiv@quotient+1,c
  3381  007442  0E00               	movlw	0
  3382  007444  6E0D               	movwf	___awdiv@quotient,c
  3383  007446  5009               	movf	___awdiv@divisor,w,c
  3384  007448  100A               	iorwf	___awdiv@divisor+1,w,c
  3385  00744A  B4D8               	btfsc	status,2,c
  3386  00744C  D01C               	goto	l478
  3387  00744E  0E01               	movlw	1
  3388  007450  6E0B               	movwf	___awdiv@counter,c
  3389  007452  D004               	goto	l473
  3390  007454  90D8               	bcf	status,0,c
  3391  007456  3609               	rlcf	___awdiv@divisor,f,c
  3392  007458  360A               	rlcf	___awdiv@divisor+1,f,c
  3393  00745A  2A0B               	incf	___awdiv@counter,f,c
  3394  00745C                     l473:
  3395  00745C  AE0A               	btfss	___awdiv@divisor+1,7,c
  3396  00745E  D7FA               	goto	l474
  3397  007460                     u1610:
  3398  007460  90D8               	bcf	status,0,c
  3399  007462  360D               	rlcf	___awdiv@quotient,f,c
  3400  007464  360E               	rlcf	___awdiv@quotient+1,f,c
  3401  007466  5009               	movf	___awdiv@divisor,w,c
  3402  007468  5C07               	subwf	___awdiv@dividend,w,c
  3403  00746A  500A               	movf	___awdiv@divisor+1,w,c
  3404  00746C  5808               	subwfb	___awdiv@dividend+1,w,c
  3405  00746E  A0D8               	btfss	status,0,c
  3406  007470  D005               	goto	l477
  3407  007472  5009               	movf	___awdiv@divisor,w,c
  3408  007474  5E07               	subwf	___awdiv@dividend,f,c
  3409  007476  500A               	movf	___awdiv@divisor+1,w,c
  3410  007478  5A08               	subwfb	___awdiv@dividend+1,f,c
  3411  00747A  800D               	bsf	___awdiv@quotient,0,c
  3412  00747C                     l477:
  3413  00747C  90D8               	bcf	status,0,c
  3414  00747E  320A               	rrcf	___awdiv@divisor+1,f,c
  3415  007480  3209               	rrcf	___awdiv@divisor,f,c
  3416  007482  2E0B               	decfsz	___awdiv@counter,f,c
  3417  007484  D7ED               	goto	u1610
  3418  007486                     l478:
  3419  007486  500C               	movf	___awdiv@sign,w,c
  3420  007488  B4D8               	btfsc	status,2,c
  3421  00748A  D004               	goto	l479
  3422  00748C  6C0D               	negf	___awdiv@quotient,c
  3423  00748E  1E0E               	comf	___awdiv@quotient+1,f,c
  3424  007490  B0D8               	btfsc	status,0,c
  3425  007492  2A0E               	incf	___awdiv@quotient+1,f,c
  3426  007494                     l479:
  3427  007494  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3428  007498  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3429  00749C  0012               	return	
  3430  00749E                     __end_of___awdiv:
  3431                           	opt stack 0
  3432                           tblptru	equ	0xFF8
  3433                           tblptrh	equ	0xFF7
  3434                           tblptrl	equ	0xFF6
  3435                           tablat	equ	0xFF5
  3436                           prodh	equ	0xFF4
  3437                           prodl	equ	0xFF3
  3438                           postinc0	equ	0xFEE
  3439                           wreg	equ	0xFE8
  3440                           postdec1	equ	0xFE5
  3441                           fsr1l	equ	0xFE1
  3442                           indf2	equ	0xFDF
  3443                           postinc2	equ	0xFDE
  3444                           postdec2	equ	0xFDD
  3445                           fsr2h	equ	0xFDA
  3446                           fsr2l	equ	0xFD9
  3447                           status	equ	0xFD8
  3448                           
  3449 ;; *************** function _anyGestureAvailable *****************
  3450 ;; Defined at:
  3451 ;;		line 81 in file "ZXgesture-library.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  gesture         2    0[COMRAM] PTR unsigned char 
  3454 ;;		 -> test_all_msg@gesture(1), main@gesture(1), 
  3455 ;;  data1           2    2[COMRAM] PTR int 
  3456 ;;		 -> test_all_msg@data_1(2), main@data_1(2), 
  3457 ;;  data2           2    4[COMRAM] PTR int 
  3458 ;;		 -> test_all_msg@data_2(2), main@data_2(2), 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  2    0[COMRAM] int 
  3463 ;; Registers used:
  3464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3470 ;;      Params:         6       0       0       0       0       0       0       0       0
  3471 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3472 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3473 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3474 ;;Total ram usage:       12 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:    1
  3477 ;; This function calls:
  3478 ;;		_UART_Data_Ready
  3479 ;;		_UART_Read
  3480 ;; This function is called by:
  3481 ;;		_main
  3482 ;;		_test_all_msg
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text26
  3487  007B16                     __ptext26:
  3488                           	opt stack 0
  3489  007B16                     _anyGestureAvailable:
  3490                           	opt stack 29
  3491                           
  3492                           ;ZXgesture-library.c: 82: if(UART_Data_Ready())
  3493                           
  3494                           ;incstack = 0
  3495  007B16  ECF0  F037         	call	_UART_Data_Ready	;wreg free
  3496  007B1A  0900               	iorlw	0
  3497  007B1C  B4D8               	btfsc	status,2,c
  3498  007B1E  D0EB               	goto	l272
  3499                           
  3500                           ;ZXgesture-library.c: 83: {
  3501                           ;ZXgesture-library.c: 84: msg = UART_Read();
  3502  007B20  ECF4  F037         	call	_UART_Read	;wreg free
  3503  007B24  6E5A               	movwf	_msg,c
  3504                           
  3505                           ;ZXgesture-library.c: 85: switch(msg){
  3506  007B26  D0D7               	goto	l257
  3507  007B28                     
  3508                           ;ZXgesture-library.c: 87: *gesture = msg;
  3509  007B28  C001  FFD9         	movff	anyGestureAvailable@gesture,fsr2l
  3510  007B2C  C002  FFDA         	movff	anyGestureAvailable@gesture+1,fsr2h
  3511  007B30  C05A  FFDF         	movff	_msg,indf2
  3512                           
  3513                           ;ZXgesture-library.c: 88: *data1 = UART_Read();
  3514  007B34  ECF4  F037         	call	_UART_Read	;wreg free
  3515  007B38  6E07               	movwf	??_anyGestureAvailable& (0+255),c
  3516  007B3A  6A08               	clrf	(??_anyGestureAvailable+1)& (0+255),c
  3517  007B3C  C003  FFD9         	movff	anyGestureAvailable@data1,fsr2l
  3518  007B40  C004  FFDA         	movff	anyGestureAvailable@data1+1,fsr2h
  3519  007B44  C007  FFDE         	movff	??_anyGestureAvailable,postinc2
  3520  007B48  C008  FFDD         	movff	??_anyGestureAvailable+1,postdec2
  3521                           
  3522                           ;ZXgesture-library.c: 89: *data2 = UART_Read();
  3523  007B4C  ECF4  F037         	call	_UART_Read	;wreg free
  3524  007B50  6E07               	movwf	??_anyGestureAvailable& (0+255),c
  3525  007B52  6A08               	clrf	(??_anyGestureAvailable+1)& (0+255),c
  3526  007B54  C005  FFD9         	movff	anyGestureAvailable@data2,fsr2l
  3527  007B58  C006  FFDA         	movff	anyGestureAvailable@data2+1,fsr2h
  3528  007B5C  C007  FFDE         	movff	??_anyGestureAvailable,postinc2
  3529  007B60  C008  FFDD         	movff	??_anyGestureAvailable+1,postdec2
  3530                           
  3531                           ;ZXgesture-library.c: 90: return 1;
  3532  007B64  0E00               	movlw	0
  3533  007B66  6E02               	movwf	?_anyGestureAvailable+1,c
  3534  007B68  0E01               	movlw	1
  3535  007B6A  6E01               	movwf	?_anyGestureAvailable,c
  3536  007B6C  0012               	return	
  3537  007B6E                     
  3538                           ;ZXgesture-library.c: 93: *gesture = 0xFE;
  3539  007B6E  C001  FFD9         	movff	anyGestureAvailable@gesture,fsr2l
  3540  007B72  C002  FFDA         	movff	anyGestureAvailable@gesture+1,fsr2h
  3541  007B76  0EFE               	movlw	254
  3542  007B78  6EDF               	movwf	indf2,c
  3543                           
  3544                           ;ZXgesture-library.c: 94: *data1 = UART_Read();
  3545  007B7A  ECF4  F037         	call	_UART_Read	;wreg free
  3546  007B7E  6E07               	movwf	??_anyGestureAvailable& (0+255),c
  3547  007B80  6A08               	clrf	(??_anyGestureAvailable+1)& (0+255),c
  3548  007B82  C003  FFD9         	movff	anyGestureAvailable@data1,fsr2l
  3549  007B86  C004  FFDA         	movff	anyGestureAvailable@data1+1,fsr2h
  3550  007B8A  C007  FFDE         	movff	??_anyGestureAvailable,postinc2
  3551  007B8E  C008  FFDD         	movff	??_anyGestureAvailable+1,postdec2
  3552                           
  3553                           ;ZXgesture-library.c: 95: *data2 = UART_Read();
  3554  007B92  ECF4  F037         	call	_UART_Read	;wreg free
  3555  007B96  6E07               	movwf	??_anyGestureAvailable& (0+255),c
  3556  007B98  6A08               	clrf	(??_anyGestureAvailable+1)& (0+255),c
  3557  007B9A  C005  FFD9         	movff	anyGestureAvailable@data2,fsr2l
  3558  007B9E  C006  FFDA         	movff	anyGestureAvailable@data2+1,fsr2h
  3559  007BA2  C007  FFDE         	movff	??_anyGestureAvailable,postinc2
  3560  007BA6  C008  FFDD         	movff	??_anyGestureAvailable+1,postdec2
  3561                           
  3562                           ;ZXgesture-library.c: 96: return 1;
  3563  007BAA  0E00               	movlw	0
  3564  007BAC  6E02               	movwf	?_anyGestureAvailable+1,c
  3565  007BAE  0E01               	movlw	1
  3566  007BB0  6E01               	movwf	?_anyGestureAvailable,c
  3567  007BB2  0012               	return	
  3568  007BB4                     
  3569                           ;ZXgesture-library.c: 99: *gesture = 0xFF;
  3570  007BB4  C001  FFD9         	movff	anyGestureAvailable@gesture,fsr2l
  3571  007BB8  C002  FFDA         	movff	anyGestureAvailable@gesture+1,fsr2h
  3572  007BBC  0EFF               	movlw	255
  3573  007BBE  6EDF               	movwf	indf2,c
  3574                           
  3575                           ;ZXgesture-library.c: 100: *data1 = 0xFF;
  3576  007BC0  C003  FFD9         	movff	anyGestureAvailable@data1,fsr2l
  3577  007BC4  C004  FFDA         	movff	anyGestureAvailable@data1+1,fsr2h
  3578  007BC8  0EFF               	movlw	255
  3579  007BCA  6EDE               	movwf	postinc2,c
  3580  007BCC  0E00               	movlw	0
  3581  007BCE  6EDD               	movwf	postdec2,c
  3582                           
  3583                           ;ZXgesture-library.c: 101: *data2 = 0xFF;
  3584  007BD0  C005  FFD9         	movff	anyGestureAvailable@data2,fsr2l
  3585  007BD4  C006  FFDA         	movff	anyGestureAvailable@data2+1,fsr2h
  3586  007BD8  0EFF               	movlw	255
  3587  007BDA  6EDE               	movwf	postinc2,c
  3588  007BDC  0E00               	movlw	0
  3589  007BDE  6EDD               	movwf	postdec2,c
  3590                           
  3591                           ;ZXgesture-library.c: 102: return 1;
  3592  007BE0  0E00               	movlw	0
  3593  007BE2  6E02               	movwf	?_anyGestureAvailable+1,c
  3594  007BE4  0E01               	movlw	1
  3595  007BE6  6E01               	movwf	?_anyGestureAvailable,c
  3596  007BE8  0012               	return	
  3597  007BEA                     
  3598                           ;ZXgesture-library.c: 105: *gesture = 0xFA;
  3599  007BEA  C001  FFD9         	movff	anyGestureAvailable@gesture,fsr2l
  3600  007BEE  C002  FFDA         	movff	anyGestureAvailable@gesture+1,fsr2h
  3601  007BF2  0EFA               	movlw	250
  3602  007BF4  6EDF               	movwf	indf2,c
  3603                           
  3604                           ;ZXgesture-library.c: 106: *data1 = UART_Read();
  3605  007BF6  ECF4  F037         	call	_UART_Read	;wreg free
  3606  007BFA  6E07               	movwf	??_anyGestureAvailable& (0+255),c
  3607  007BFC  6A08               	clrf	(??_anyGestureAvailable+1)& (0+255),c
  3608  007BFE  C003  FFD9         	movff	anyGestureAvailable@data1,fsr2l
  3609  007C02  C004  FFDA         	movff	anyGestureAvailable@data1+1,fsr2h
  3610  007C06  C007  FFDE         	movff	??_anyGestureAvailable,postinc2
  3611  007C0A  C008  FFDD         	movff	??_anyGestureAvailable+1,postdec2
  3612                           
  3613                           ;ZXgesture-library.c: 107: *data2 = 0xFF;
  3614  007C0E  C005  FFD9         	movff	anyGestureAvailable@data2,fsr2l
  3615  007C12  C006  FFDA         	movff	anyGestureAvailable@data2+1,fsr2h
  3616  007C16  0EFF               	movlw	255
  3617  007C18  6EDE               	movwf	postinc2,c
  3618  007C1A  0E00               	movlw	0
  3619  007C1C  6EDD               	movwf	postdec2,c
  3620                           
  3621                           ;ZXgesture-library.c: 110: _last_x = *data1 > 240 ? 0xFF : *data1;
  3622  007C1E  C003  FFD9         	movff	anyGestureAvailable@data1,fsr2l
  3623  007C22  C004  FFDA         	movff	anyGestureAvailable@data1+1,fsr2h
  3624  007C26  0E01               	movlw	1
  3625  007C28  BEDB               	btfsc	plusw2,7,c
  3626  007C2A  D007               	goto	u1770
  3627  007C2C  0E01               	movlw	1
  3628  007C2E  50DB               	movf	plusw2,w,c
  3629  007C30  E10D               	bnz	l2114
  3630  007C32  0EF1               	movlw	241
  3631  007C34  5CDE               	subwf	postinc2,w,c
  3632  007C36  B0D8               	btfsc	status,0,c
  3633  007C38  D009               	goto	l264
  3634  007C3A                     u1770:
  3635  007C3A  C003  FFD9         	movff	anyGestureAvailable@data1,fsr2l
  3636  007C3E  C004  FFDA         	movff	anyGestureAvailable@data1+1,fsr2h
  3637  007C42  CFDE F009          	movff	postinc2,_anyGestureAvailable$296
  3638  007C46  CFDD F00A          	movff	postdec2,_anyGestureAvailable$296+1
  3639  007C4A  D003               	goto	l266
  3640  007C4C                     l264:
  3641  007C4C                     l2114:
  3642  007C4C  0E00               	movlw	0
  3643  007C4E  6E0A               	movwf	_anyGestureAvailable$296+1,c
  3644  007C50  6809               	setf	_anyGestureAvailable$296,c
  3645  007C52                     l266:
  3646  007C52  C009  F055         	movff	_anyGestureAvailable$296,__last_x
  3647                           
  3648                           ;ZXgesture-library.c: 112: return 1;
  3649  007C56  0E00               	movlw	0
  3650  007C58  6E02               	movwf	?_anyGestureAvailable+1,c
  3651  007C5A  0E01               	movlw	1
  3652  007C5C  6E01               	movwf	?_anyGestureAvailable,c
  3653  007C5E  0012               	return	
  3654  007C60                     
  3655                           ;ZXgesture-library.c: 115: *gesture = 0xFB;
  3656  007C60  C001  FFD9         	movff	anyGestureAvailable@gesture,fsr2l
  3657  007C64  C002  FFDA         	movff	anyGestureAvailable@gesture+1,fsr2h
  3658  007C68  0EFB               	movlw	251
  3659  007C6A  6EDF               	movwf	indf2,c
  3660                           
  3661                           ;ZXgesture-library.c: 116: *data1 = UART_Read();
  3662  007C6C  ECF4  F037         	call	_UART_Read	;wreg free
  3663  007C70  6E07               	movwf	??_anyGestureAvailable& (0+255),c
  3664  007C72  6A08               	clrf	(??_anyGestureAvailable+1)& (0+255),c
  3665  007C74  C003  FFD9         	movff	anyGestureAvailable@data1,fsr2l
  3666  007C78  C004  FFDA         	movff	anyGestureAvailable@data1+1,fsr2h
  3667  007C7C  C007  FFDE         	movff	??_anyGestureAvailable,postinc2
  3668  007C80  C008  FFDD         	movff	??_anyGestureAvailable+1,postdec2
  3669                           
  3670                           ;ZXgesture-library.c: 117: *data2 = 0xFF;
  3671  007C84  C005  FFD9         	movff	anyGestureAvailable@data2,fsr2l
  3672  007C88  C006  FFDA         	movff	anyGestureAvailable@data2+1,fsr2h
  3673  007C8C  0EFF               	movlw	255
  3674  007C8E  6EDE               	movwf	postinc2,c
  3675  007C90  0E00               	movlw	0
  3676  007C92  6EDD               	movwf	postdec2,c
  3677                           
  3678                           ;ZXgesture-library.c: 120: _last_z = *data1 > 240 ? 0xFF : *data1;
  3679  007C94  C003  FFD9         	movff	anyGestureAvailable@data1,fsr2l
  3680  007C98  C004  FFDA         	movff	anyGestureAvailable@data1+1,fsr2h
  3681  007C9C  0E01               	movlw	1
  3682  007C9E  BEDB               	btfsc	plusw2,7,c
  3683  007CA0  D007               	goto	u1780
  3684  007CA2  0E01               	movlw	1
  3685  007CA4  50DB               	movf	plusw2,w,c
  3686  007CA6  E10D               	bnz	l2130
  3687  007CA8  0EF1               	movlw	241
  3688  007CAA  5CDE               	subwf	postinc2,w,c
  3689  007CAC  B0D8               	btfsc	status,0,c
  3690  007CAE  D009               	goto	l269
  3691  007CB0                     u1780:
  3692  007CB0  C003  FFD9         	movff	anyGestureAvailable@data1,fsr2l
  3693  007CB4  C004  FFDA         	movff	anyGestureAvailable@data1+1,fsr2h
  3694  007CB8  CFDE F00B          	movff	postinc2,_anyGestureAvailable$297
  3695  007CBC  CFDD F00C          	movff	postdec2,_anyGestureAvailable$297+1
  3696  007CC0  D003               	goto	l271
  3697  007CC2                     l269:
  3698  007CC2                     l2130:
  3699  007CC2  0E00               	movlw	0
  3700  007CC4  6E0C               	movwf	_anyGestureAvailable$297+1,c
  3701  007CC6  680B               	setf	_anyGestureAvailable$297,c
  3702  007CC8                     l271:
  3703  007CC8  C00B  F054         	movff	_anyGestureAvailable$297,__last_z
  3704                           
  3705                           ;ZXgesture-library.c: 122: return 1;
  3706  007CCC  0E00               	movlw	0
  3707  007CCE  6E02               	movwf	?_anyGestureAvailable+1,c
  3708  007CD0  0E01               	movlw	1
  3709  007CD2  6E01               	movwf	?_anyGestureAvailable,c
  3710  007CD4  0012               	return	
  3711  007CD6                     l257:
  3712  007CD6  505A               	movf	_msg,w,c
  3713                           
  3714                           ; Switch size 1, requested type "space"
  3715                           ; Number of cases is 5, Range of values is 250 to 255
  3716                           ; switch strategies available:
  3717                           ; Name         Instructions Cycles
  3718                           ; simple_byte           16     9 (average)
  3719                           ;	Chosen strategy is simple_byte
  3720  007CD8  0AFA               	xorlw	250	; case 250
  3721  007CDA  B4D8               	btfsc	status,2,c
  3722  007CDC  D786               	goto	l262
  3723  007CDE  0A01               	xorlw	1	; case 251
  3724  007CE0  B4D8               	btfsc	status,2,c
  3725  007CE2  D7BE               	goto	l267
  3726  007CE4  0A07               	xorlw	7	; case 252
  3727  007CE6  B4D8               	btfsc	status,2,c
  3728  007CE8  D71F               	goto	l258
  3729  007CEA  0A02               	xorlw	2	; case 254
  3730  007CEC  B4D8               	btfsc	status,2,c
  3731  007CEE  D73F               	goto	l260
  3732  007CF0  0A01               	xorlw	1	; case 255
  3733  007CF2  B4D8               	btfsc	status,2,c
  3734  007CF4  D75F               	goto	l261
  3735  007CF6                     l272:
  3736                           
  3737                           ;ZXgesture-library.c: 124: }
  3738                           ;ZXgesture-library.c: 125: return 0;
  3739  007CF6  0E00               	movlw	0
  3740  007CF8  6E02               	movwf	?_anyGestureAvailable+1,c
  3741  007CFA  0E00               	movlw	0
  3742  007CFC  6E01               	movwf	?_anyGestureAvailable,c
  3743  007CFE  0012               	return	
  3744  007D00                     __end_of_anyGestureAvailable:
  3745                           	opt stack 0
  3746                           tblptru	equ	0xFF8
  3747                           tblptrh	equ	0xFF7
  3748                           tblptrl	equ	0xFF6
  3749                           tablat	equ	0xFF5
  3750                           prodh	equ	0xFF4
  3751                           prodl	equ	0xFF3
  3752                           postinc0	equ	0xFEE
  3753                           wreg	equ	0xFE8
  3754                           postdec1	equ	0xFE5
  3755                           fsr1l	equ	0xFE1
  3756                           indf2	equ	0xFDF
  3757                           postinc2	equ	0xFDE
  3758                           postdec2	equ	0xFDD
  3759                           plusw2	equ	0xFDB
  3760                           fsr2h	equ	0xFDA
  3761                           fsr2l	equ	0xFD9
  3762                           status	equ	0xFD8
  3763                           
  3764 ;; *************** function _UART_Read *****************
  3765 ;; Defined at:
  3766 ;;		line 57 in file "ZXgesture-library.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      unsigned char 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3783 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3784 ;;Total ram usage:        0 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_anyGestureAvailable
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text27
  3794  006FE8                     __ptext27:
  3795                           	opt stack 0
  3796  006FE8                     _UART_Read:
  3797                           	opt stack 29
  3798                           
  3799                           ;ZXgesture-library.c: 59: while(!RCIF);
  3800                           
  3801                           ;incstack = 0
  3802  006FE8  AA9E               	btfss	3998,5,c	;volatile
  3803  006FEA  D7FE               	goto	_UART_Read
  3804                           
  3805                           ;ZXgesture-library.c: 60: return RCREG;
  3806  006FEC  50AE               	movf	4014,w,c	;volatile
  3807  006FEE  0012               	return	
  3808  006FF0                     __end_of_UART_Read:
  3809                           	opt stack 0
  3810                           tblptru	equ	0xFF8
  3811                           tblptrh	equ	0xFF7
  3812                           tblptrl	equ	0xFF6
  3813                           tablat	equ	0xFF5
  3814                           prodh	equ	0xFF4
  3815                           prodl	equ	0xFF3
  3816                           postinc0	equ	0xFEE
  3817                           wreg	equ	0xFE8
  3818                           postdec1	equ	0xFE5
  3819                           fsr1l	equ	0xFE1
  3820                           indf2	equ	0xFDF
  3821                           postinc2	equ	0xFDE
  3822                           postdec2	equ	0xFDD
  3823                           plusw2	equ	0xFDB
  3824                           fsr2h	equ	0xFDA
  3825                           fsr2l	equ	0xFD9
  3826                           status	equ	0xFD8
  3827                           
  3828 ;; *************** function _UART_Data_Ready *****************
  3829 ;; Defined at:
  3830 ;;		line 53 in file "ZXgesture-library.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      unsigned char 
  3837 ;; Registers used:
  3838 ;;		wreg
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3847 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_anyGestureAvailable
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text28
  3858  006FE0                     __ptext28:
  3859                           	opt stack 0
  3860  006FE0                     _UART_Data_Ready:
  3861                           	opt stack 29
  3862                           
  3863                           ;ZXgesture-library.c: 55: return RCIF;
  3864                           
  3865                           ;incstack = 0
  3866  006FE0  0E00               	movlw	0
  3867  006FE2  BA9E               	btfsc	3998,5,c	;volatile
  3868  006FE4  0E01               	movlw	1
  3869  006FE6  0012               	return	
  3870  006FE8                     __end_of_UART_Data_Ready:
  3871                           	opt stack 0
  3872                           tblptru	equ	0xFF8
  3873                           tblptrh	equ	0xFF7
  3874                           tblptrl	equ	0xFF6
  3875                           tablat	equ	0xFF5
  3876                           prodh	equ	0xFF4
  3877                           prodl	equ	0xFF3
  3878                           postinc0	equ	0xFEE
  3879                           wreg	equ	0xFE8
  3880                           postdec1	equ	0xFE5
  3881                           fsr1l	equ	0xFE1
  3882                           indf2	equ	0xFDF
  3883                           postinc2	equ	0xFDE
  3884                           postdec2	equ	0xFDD
  3885                           plusw2	equ	0xFDB
  3886                           fsr2h	equ	0xFDA
  3887                           fsr2l	equ	0xFD9
  3888                           status	equ	0xFD8
  3889                           
  3890 ;; *************** function _abs *****************
  3891 ;; Defined at:
  3892 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  a               2    0[COMRAM] int 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  2    0[COMRAM] int 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3906 ;;      Params:         2       0       0       0       0       0       0       0       0
  3907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3908 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3909 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3910 ;;Total ram usage:        4 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_main
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text29
  3920  0070C2                     __ptext29:
  3921                           	opt stack 0
  3922  0070C2                     _abs:
  3923                           	opt stack 30
  3924                           
  3925                           ;incstack = 0
  3926  0070C2  AE02               	btfss	abs@a+1,7,c
  3927  0070C4  D00D               	goto	l348
  3928  0070C6  C001  F003         	movff	abs@a,??_abs
  3929  0070CA  C002  F004         	movff	abs@a+1,??_abs+1
  3930  0070CE  1E03               	comf	??_abs,f,c
  3931  0070D0  1E04               	comf	??_abs+1,f,c
  3932  0070D2  4A03               	infsnz	??_abs,f,c
  3933  0070D4  2A04               	incf	??_abs+1,f,c
  3934  0070D6  C003  F001         	movff	??_abs,?_abs
  3935  0070DA  C004  F002         	movff	??_abs+1,?_abs+1
  3936  0070DE  0012               	return	
  3937  0070E0                     l348:
  3938  0070E0  C001  F001         	movff	abs@a,?_abs
  3939  0070E4  C002  F002         	movff	abs@a+1,?_abs+1
  3940  0070E8  0012               	return		;funcret
  3941  0070EA                     __end_of_abs:
  3942                           	opt stack 0
  3943                           tblptru	equ	0xFF8
  3944                           tblptrh	equ	0xFF7
  3945                           tblptrl	equ	0xFF6
  3946                           tablat	equ	0xFF5
  3947                           prodh	equ	0xFF4
  3948                           prodl	equ	0xFF3
  3949                           postinc0	equ	0xFEE
  3950                           wreg	equ	0xFE8
  3951                           postdec1	equ	0xFE5
  3952                           fsr1l	equ	0xFE1
  3953                           indf2	equ	0xFDF
  3954                           postinc2	equ	0xFDE
  3955                           postdec2	equ	0xFDD
  3956                           plusw2	equ	0xFDB
  3957                           fsr2h	equ	0xFDA
  3958                           fsr2l	equ	0xFD9
  3959                           status	equ	0xFD8
  3960                           
  3961 ;; *************** function _UART_Write *****************
  3962 ;; Defined at:
  3963 ;;		line 63 in file "ZXgesture-library.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  data            1    wreg     unsigned char 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  data            1    0[COMRAM] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3977 ;;      Params:         0       0       0       0       0       0       0       0       0
  3978 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3980 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3981 ;;Total ram usage:        1 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_main
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text30
  3991  007012                     __ptext30:
  3992                           	opt stack 0
  3993  007012                     _UART_Write:
  3994                           	opt stack 30
  3995                           
  3996                           ;incstack = 0
  3997                           ;UART_Write@data stored from wreg
  3998  007012  6E01               	movwf	UART_Write@data,c
  3999  007014                     
  4000                           ;ZXgesture-library.c: 65: while(!TRMT);
  4001  007014  A2AC               	btfss	4012,1,c	;volatile
  4002  007016  D7FE               	goto	l2152
  4003                           
  4004                           ;ZXgesture-library.c: 66: TXREG = data;
  4005  007018  C001  FFAD         	movff	UART_Write@data,4013	;volatile
  4006  00701C  0012               	return		;funcret
  4007  00701E                     __end_of_UART_Write:
  4008                           	opt stack 0
  4009                           tblptru	equ	0xFF8
  4010                           tblptrh	equ	0xFF7
  4011                           tblptrl	equ	0xFF6
  4012                           tablat	equ	0xFF5
  4013                           prodh	equ	0xFF4
  4014                           prodl	equ	0xFF3
  4015                           postinc0	equ	0xFEE
  4016                           wreg	equ	0xFE8
  4017                           postdec1	equ	0xFE5
  4018                           fsr1l	equ	0xFE1
  4019                           indf2	equ	0xFDF
  4020                           postinc2	equ	0xFDE
  4021                           postdec2	equ	0xFDD
  4022                           plusw2	equ	0xFDB
  4023                           fsr2h	equ	0xFDA
  4024                           fsr2l	equ	0xFD9
  4025                           status	equ	0xFD8
  4026                           
  4027 ;; *************** function _AFSmartBoard_Init *****************
  4028 ;; Defined at:
  4029 ;;		line 157 in file "main.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;		None
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4043 ;;      Params:         0       0       0       0       0       0       0       0       0
  4044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4046 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4047 ;;Total ram usage:        0 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_main
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text31
  4057  0070EA                     __ptext31:
  4058                           	opt stack 0
  4059  0070EA                     _AFSmartBoard_Init:
  4060                           	opt stack 30
  4061                           
  4062                           ;main.c: 158: RCON = 0X80;
  4063                           
  4064                           ;incstack = 0
  4065  0070EA  0E80               	movlw	128
  4066  0070EC  6ED0               	movwf	4048,c	;volatile
  4067                           
  4068                           ;main.c: 159: ADCON1 = 0x0F;
  4069  0070EE  0E0F               	movlw	15
  4070  0070F0  6EC1               	movwf	4033,c	;volatile
  4071                           
  4072                           ;main.c: 160: CMCON = 0x0F;
  4073  0070F2  0E0F               	movlw	15
  4074  0070F4  6EB4               	movwf	4020,c	;volatile
  4075                           
  4076                           ;main.c: 161: LATA = 0;
  4077  0070F6  0E00               	movlw	0
  4078  0070F8  6E89               	movwf	3977,c	;volatile
  4079                           
  4080                           ;main.c: 162: TRISA = 0;
  4081  0070FA  0E00               	movlw	0
  4082  0070FC  6E92               	movwf	3986,c	;volatile
  4083                           
  4084                           ;main.c: 163: T0CON = 0b11000101;
  4085  0070FE  0EC5               	movlw	197
  4086  007100  6ED5               	movwf	4053,c	;volatile
  4087                           
  4088                           ;main.c: 164: LATB = 0;
  4089  007102  0E00               	movlw	0
  4090  007104  6E8A               	movwf	3978,c	;volatile
  4091                           
  4092                           ;main.c: 165: TRISB = 0;
  4093  007106  0E00               	movlw	0
  4094  007108  6E93               	movwf	3987,c	;volatile
  4095                           
  4096                           ;main.c: 166: LATD = 0;
  4097  00710A  0E00               	movlw	0
  4098  00710C  6E8C               	movwf	3980,c	;volatile
  4099                           
  4100                           ;main.c: 167: TRISD = 0x00;
  4101  00710E  0E00               	movlw	0
  4102  007110  6E95               	movwf	3989,c	;volatile
  4103                           
  4104                           ;main.c: 168: LATE = 0;
  4105  007112  0E00               	movlw	0
  4106  007114  6E8D               	movwf	3981,c	;volatile
  4107  007116  0012               	return		;funcret
  4108  007118                     __end_of_AFSmartBoard_Init:
  4109                           	opt stack 0
  4110  0000                     tblptru	equ	0xFF8
  4111                           tblptrh	equ	0xFF7
  4112                           tblptrl	equ	0xFF6
  4113                           tablat	equ	0xFF5
  4114                           prodh	equ	0xFF4
  4115                           prodl	equ	0xFF3
  4116                           postinc0	equ	0xFEE
  4117                           wreg	equ	0xFE8
  4118                           postdec1	equ	0xFE5
  4119                           fsr1l	equ	0xFE1
  4120                           indf2	equ	0xFDF
  4121                           postinc2	equ	0xFDE
  4122                           postdec2	equ	0xFDD
  4123                           plusw2	equ	0xFDB
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8
  4127                           tblptru	equ	0xFF8
  4128                           tblptrh	equ	0xFF7
  4129                           tblptrl	equ	0xFF6
  4130                           tablat	equ	0xFF5
  4131                           prodh	equ	0xFF4
  4132                           prodl	equ	0xFF3
  4133                           postinc0	equ	0xFEE
  4134                           wreg	equ	0xFE8
  4135                           postdec1	equ	0xFE5
  4136                           fsr1l	equ	0xFE1
  4137                           indf2	equ	0xFDF
  4138                           postinc2	equ	0xFDE
  4139                           postdec2	equ	0xFDD
  4140                           plusw2	equ	0xFDB
  4141                           fsr2h	equ	0xFDA
  4142                           fsr2l	equ	0xFD9
  4143                           status	equ	0xFD8
  4144                           
  4145                           	psect	rparam
  4146  0000                     tblptru	equ	0xFF8
  4147                           tblptrh	equ	0xFF7
  4148                           tblptrl	equ	0xFF6
  4149                           tablat	equ	0xFF5
  4150                           prodh	equ	0xFF4
  4151                           prodl	equ	0xFF3
  4152                           postinc0	equ	0xFEE
  4153                           wreg	equ	0xFE8
  4154                           postdec1	equ	0xFE5
  4155                           fsr1l	equ	0xFE1
  4156                           indf2	equ	0xFDF
  4157                           postinc2	equ	0xFDE
  4158                           postdec2	equ	0xFDD
  4159                           plusw2	equ	0xFDB
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     75      92
    BANK0           160     22      22
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> ceil@expon(COMRAM[2]), 

    anyGestureAvailable@data2	PTR int  size(2) Largest target is 2
		 -> test_all_msg@data_2(COMRAM[2]), main@data_2(BANK0[2]), 

    anyGestureAvailable@data1	PTR int  size(2) Largest target is 2
		 -> test_all_msg@data_1(COMRAM[2]), main@data_1(BANK0[2]), 

    anyGestureAvailable@gesture	PTR unsigned char  size(2) Largest target is 1
		 -> test_all_msg@gesture(COMRAM[1]), main@gesture(BANK0[1]), 


Critical Paths under _main in COMRAM

    _main->_decreasePWM
    _main->_increasePWM
    _prevPage->_led_control
    _nextPage->_led_control
    _ledON->_led_control
    _ledOFF->_led_control
    _init_ledRGB->_led_control
    _increasePWM->___ftneg
    _decreasePWM->___ftneg
    _ceil->___altoft
    ___fttol->___ftadd
    ___ftadd->___awtoft
    ___altoft->___fttol
    ___ftneg->_ceil
    ___awtoft->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   35988
                                             73 COMRAM     2     2      0
                                              0 BANK0     22    22      0
                  _AFSmartBoard_Init
                         _UART_Write
                                _abs
                _anyGestureAvailable
                        _decreasePWM
                           _getLastX
                           _getLastZ
                        _increasePWM
                    _init_XZ_Gesture
                        _init_ledRGB
                           _ledBlink
                             _ledOFF
                              _ledON
                           _nextPage
                           _prevPage
 ---------------------------------------------------------------------------------
 (1) _prevPage                                             0     0      0      22
                        _led_control
 ---------------------------------------------------------------------------------
 (1) _nextPage                                             0     0      0      22
                        _led_control
 ---------------------------------------------------------------------------------
 (1) _ledBlink                                             6     6      0     140
                                              1 COMRAM     4     4      0
                             _ledOFF
                              _ledON
 ---------------------------------------------------------------------------------
 (1) _ledON                                                0     0      0      22
                        _led_control
 ---------------------------------------------------------------------------------
 (1) _ledOFF                                               0     0      0      22
                        _led_control
 ---------------------------------------------------------------------------------
 (1) _init_ledRGB                                          0     0      0      22
                        _led_control
                        _pwm_config_
 ---------------------------------------------------------------------------------
 (2) _pwm_config_                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _led_control                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_XZ_Gesture                                      0     0      0       0
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _increasePWM                                          7     7      0   16780
                                             66 COMRAM     7     7      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftneg
                            ___fttol
                             ___wmul
                               _ceil
 ---------------------------------------------------------------------------------
 (1) _getLastZ                                             2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getLastX                                             2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _decreasePWM                                          7     7      0   16780
                                             66 COMRAM     7     7      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftneg
                            ___fttol
                             ___wmul
                               _ceil
 ---------------------------------------------------------------------------------
 (2) _ceil                                                 8     5      3    8299
                                             55 COMRAM     8     5      3
                           ___altoft
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftadd
                             ___ftge
                            ___fttol
                             ___wmul (ARG)
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     360
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     480
                                             30 COMRAM    15    11      4
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     440
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3975
                                             18 COMRAM    12     6      6
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    2641
                                             45 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     197
                                             63 COMRAM     3     0      3
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___fttol (ARG)
                             ___wmul (ARG)
                               _ceil (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2670
                                             14 COMRAM     4     1      3
                            ___awdiv (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2427
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _anyGestureAvailable                                 12     6      6    1150
                                              0 COMRAM    12     6      6
                    _UART_Data_Ready
                          _UART_Read
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     218
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AFSmartBoard_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AFSmartBoard_Init
   _UART_Write
   _abs
   _anyGestureAvailable
     _UART_Data_Ready
     _UART_Read
   _decreasePWM
     ___awdiv
       ___wmul (ARG)
     ___awtoft
       ___awdiv (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftadd
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftneg
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _ceil (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftge (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _ceil
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftge (ARG)
       ___fttol (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _frexp (ARG)
   _getLastX
   _getLastZ
   _increasePWM
     ___awdiv
       ___wmul (ARG)
     ___awtoft
       ___awdiv (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftadd
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftneg
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _ceil (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftge (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _ceil
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftge (ARG)
       ___fttol (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _frexp (ARG)
   _init_XZ_Gesture
     _UART_Init
   _init_ledRGB
     _led_control
     _pwm_config_
   _ledBlink
     _ledOFF
       _led_control
     _ledON
       _led_control
   _ledOFF
     _led_control
   _ledON
     _led_control
   _nextPage
     _led_control
   _prevPage
     _led_control

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      16       5       13.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4B      5C       1       96.8%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      11        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 10 12:23:34 2018

                ___altoft@exp 0036                 ___altoft@sign 0037                            l30 73A6  
                          l32 73AE                            l33 73B6                            l34 73BE  
                          l50 71DC                            l35 73C6                            l36 73CE  
                          l52 71E4                            l29 73E6                            l37 73D6  
                          l38 73DE                            l71 722C                            l81 76C2  
                          l57 71A2                            l75 724C                            l59 71AA  
                          l92 75F8                            l85 7770                            l69 7214  
                          l87 7778                            l96 769A                            l98 76A2  
                ?_led_control 0001                  ___awdiv@sign 000C           ___wmul@multiplicand 0003  
                ___ftadd@exp1 001E                  ___ftadd@exp2 001D                  ___ftadd@sign 001C  
                         l260 7B6E                           l156 72AC                           l261 7BB4  
                         l262 7BEA                           l271 7CC8                           l272 7CF6  
                         l264 7C4C                           l600 7AA4                           l257 7CD6  
                         l601 7AC0                           l505 78BA                           l266 7C52  
                         l258 7B28                           l530 758A                           l602 7AF0  
                         l267 7C60                           l531 7574                           l507 78C8  
                         l348 70E0                           l508 78E2                           l269 7CC2  
                         l533 75B2                           l509 795C                           l470 742E  
                         l534 75A8                           l471 743E                           l527 7556  
                         l615 74CE                           l528 754C                           l616 74FE  
                         l473 745C                           l633 708E                           l474 7454  
                         l387 72E0                           l651 7844                           l643 77AA  
                         l388 72D4                           l652 7838                           l477 747C  
                         l645 7820                           l478 7486                           l574 79BC  
                         l654 7860                           l646 7810                           l558 7346  
                         l479 7494                           l583 7A4C                           l498 7162  
                         l578 79E6                           l588 7A42                           l597 7A80  
                         l589 7A38                           l598 7A76                           _PR2 000FCB  
                __CFG_BOR$OFF 000000                           _abs 70C2                           _msg 005A  
                         wreg 000FE8                  __CFG_FOSC$HS 000000                  __CFG_LVP$OFF 000000  
                __CFG_WDT$OFF 000000                          l2010 721C                          ?_abs 0001  
                        l2004 7204                          l2022 7238                          l2130 7CC2  
                        l2114 7C4C                          l2018 7232                          l2152 7014  
                        l2056 75F8                          l2048 7770                          l1638 752A  
                        l1988 71DC                          _BRGH 007D62                          _CREN 007D5C  
                        u1100 753E                          u1201 798E                   main@gesture 0071  
                        u1140 75BC                          u1230 79AE                          u1330 7A54  
                        u1410 736E                          u1260 79D8                          _LATA 000F89  
                        u1510 784A                          _LATB 000F8A                          u1191 797A  
                        u1360 7A88                          _LATD 000F8C                          _LATE 000F8D  
                        u1610 7460                          u1290 7A16                          u1418 7370  
                        u1451 778E                          u1700 7232                          u1470 77C8  
                        u1550 78D4                          u1710 7238                          u1720 76B6  
                        u1730 7766                          u1475 77C0                          u1740 75EC  
                        u1660 71CE                   main@count_z 0068                          u1670 7194  
                        u1770 7C3A                          u1780 7CB0                          _RCIF 007CF5  
                        _RCON 000FD0                          _TMR2 000FCC                          _SPEN 007D5F  
                        _TRMT 007D61                          _TXEN 007D65                          _SYNC 007D64  
                        abs@a 0001                          _ceil 7872                          _main 7252  
                ___ftpack@arg 0001                   main@valid_z 0062                  ___ftpack@exp 0004  
                        fsr2h 000FDA                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          prodh 000FF4                          prodl 000FF3  
                        start 0002                  ?_increasePWM 0001                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000       __end_of_init_XZ_Gesture 6FE0                  ___fttol@exp1 002D  
                       ??_abs 0003                  ___fttol@lval 0029                 __CFG_PLLDIV$1 000000  
                       ?_ceil 0038                         ?_main 0001               __end_of___awdiv 749E  
             __end_of___ftadd 7B16                         _BRG16 007DC3                         _CMCON 000FB4  
             __end_of___ftneg 709C                  ?_init_ledRGB 0001                         _T0CON 000FD5  
             ___awdiv@divisor 0009               __end_of___fttol 7872                         _T2CON 000FCA  
             ___awdiv@counter 000B                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISD 000F95  
                       _TXREG 000FAD                 __CFG_PWRT$OFF 000000                   ?_UART_Write 0001  
          __size_of_UART_Init 0016            __size_of_UART_Read 0008                 ___awtoft@sign 0012  
                       _ledON 702E                         ceil@i 003B                         ceil@x 0038  
                       _frexp 732A                         _errno 0056                 ___ftpack@sign 0005  
                       main@x 0060                         main@z 006B          __size_of_decreasePWM 00CC  
                       tablat 000FF5                         plusw2 000FDB                         status 000FD8  
             __initialization 7118                  __end_of_ceil 796A                  __end_of_main 72B2  
                      ??_ceil 003B                        ??_main 004A                 ___fttol@sign1 0028  
               __activetblptr 000002                 main@isLightON 006A                        ?_ledON 0001  
                      _ADCON1 000FC1                        ?_frexp 0001              __end_of___altoft 732A  
                      _CCPR1L 000FBE              ___awdiv@dividend 0007              __end_of___awtoft 7186  
            __end_of___ftpack 75DC               _decreasePWM$190 0046               _decreasePWM$917 0043  
                      _TRISC2 007CA2                        _TRISC6 007CA6                        _TRISC7 007CA7  
            __end_of_getLastX 6FF8              __end_of_getLastZ 7000              __end_of_ledBlink 7252  
           __end_of_UART_Init 7058             __end_of_UART_Read 6FF0                        ___ftge 749E  
         __size_of_UART_Write 000C                        ___wmul 709C                     ??___awdiv 000B  
                   ??___ftadd 0019              ?_init_XZ_Gesture 0001                     ??___ftneg 0043  
                      _ledOFF 7000                     ??___fttol 0023                        clear_0 713E  
            ___awdiv@quotient 000D              __end_of_nextPage 71F8          __size_of_led_control 0078  
                __pdataCOMRAM 004C              __end_of_prevPage 71BE                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 7144                    ___altoft@c 002E               __CFG_PBADEN$OFF 000000  
                  ___ftadd@f1 0013                    ___ftadd@f2 0016                    ___ftge@ff1 0001  
                  ___ftge@ff2 0004                 ___rparam_used 000001                    ___ftneg@f1 0040  
                  ___awtoft@c 000F             _AFSmartBoard_Init 70EA                  ?_pwm_config_ 0001  
                  ___fttol@f1 001F                __pcstackCOMRAM 0001   __end_of_anyGestureAvailable 7D00  
          ?_AFSmartBoard_Init 0001          __size_of_increasePWM 00D6                 __end_of_ledON 7042  
               __end_of_frexp 73A2           ??_AFSmartBoard_Init 0001          __size_of_init_ledRGB 0010  
              increasePWM@val 0048                       ??_ledON 0002                       ??_frexp 0006  
   __end_of_AFSmartBoard_Init 7118      __size_of_UART_Data_Ready 0008                       ?___ftge 0001  
                     ?___wmul 0001                       ?_ledOFF 0001                       _CCP1CON 000FBD  
                   ?___altoft 002E                     ?___awtoft 000F                     ?___ftpack 0001  
  anyGestureAvailable@gesture 0001                    __pwm_count 005B                  ??_UART_Write 0001  
                   ?_getLastX 0001                     ?_getLastZ 0001                     ?_ledBlink 0001  
                   ?_nextPage 0001                       __Hparam 0000                       __Lparam 0000  
                   ?_prevPage 0001               __size_of___ftge 0090                       ___awdiv 741A  
                     ___ftadd 796A                       ___ftneg 7078               __size_of___wmul 0026  
          __end_of_UART_Write 701E                       ___fttol 777E               __size_of_ledOFF 0008  
                  ??___altoft 0032                       __last_x 0055                       __last_z 0054  
                     __pcinit 7118                    ??___awtoft 0012                    ??___ftpack 0006  
                     __ramtop 0800                       __ptext0 7252                       __ptext1 7186  
                     __ptext2 71BE                       __ptext3 71F8                       __ptext4 702E  
                     __ptext5 7000                       __ptext6 701E                       __ptext7 7058  
                     __ptext8 73A2                       __ptext9 6FDA                     _T2CONbits 000FCA  
                __size_of_abs 0028                 ??_decreasePWM 0043                    ??_getLastX 0003  
                  ??_getLastZ 0003                    ??_ledBlink 0002          end_of_initialization 7144  
               __Lmediumconst 0000    __size_of_AFSmartBoard_Init 002E                    ??_nextPage 0002  
                  ??_prevPage 0002                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE          __size_of_pwm_config_ 0020  
           ??_UART_Data_Ready 0001                     _UART_Init 7042                     _UART_Read 6FE8  
              UART_Write@data 0001                     _TRISCbits 000F94                  _color_pages_ 004C  
                  main@data_1 0074                    main@data_2 006F           __end_of_decreasePWM 76A8  
                  main@rate_z 0064                 ??_led_control 0001                __end_of___ftge 752E  
              __end_of___wmul 70C2                __end_of_ledOFF 7008                    ?_UART_Init 0001  
                  ?_UART_Read 0001                 __pidataCOMRAM 7008      __size_of_init_XZ_Gesture 0006  
         start_initialization 7118                   __end_of_abs 70EA                    frexp@value 0001  
                _index_color_ 0058                 ??_increasePWM 0043                      ??___ftge 0007  
                    ??___wmul 0005                      ??_ledOFF 0002           main@substate_toggle 006D  
               ??_init_ledRGB 0002             __size_of___altoft 0078  __size_of_anyGestureAvailable 01EA  
           __size_of___awtoft 0038             __size_of___ftpack 00AE           __end_of_led_control 741A  
                 __pbssCOMRAM 0056                 __pcstackBANK0 0060                   _decreasePWM 75DC  
           __size_of_getLastX 0008             __size_of_getLastZ 0008             __size_of_ledBlink 005A  
           __size_of_nextPage 003A                      ?___awdiv 0007                      ?___ftadd 0013  
                    ?___ftneg 0040                      ?___fttol 001F             __size_of_prevPage 0038  
         __end_of_increasePWM 777E                   ??_UART_Init 0001                   ??_UART_Read 0001  
     _anyGestureAvailable$296 0009       _anyGestureAvailable$297 000B                     ceil@expon 003E  
         __end_of_init_ledRGB 702E                __size_of_ledON 0014                __size_of_frexp 0078  
           ??_init_XZ_Gesture 0001                ___wmul@product 0005                      _LATAbits 000F89  
             _UART_Data_Ready 6FE0               main@count_tchau 0072                decreasePWM@val 0048  
                   ledBlink@c 0002                     ledBlink@d 0004                   _led_control 73A2  
             _increasePWM$187 0046               _increasePWM$916 0043             ___wmul@multiplier 0001  
           led_control@ledCor 0001                     copy_data0 712C                     frexp@eptr 0004  
                    __Hrparam 0000                   _increasePWM 76A8                 ??_pwm_config_ 0001  
                    __Lrparam 0000              __size_of___awdiv 0084              __size_of___ftadd 01AC  
            __size_of___ftneg 0024                      ___altoft 72B2              __size_of___fttol 00F4  
                    ___awtoft 714E                      ___ftpack 752E                   _init_ledRGB 701E  
                    _main$261 0066                      _getLastX 6FF0                      _getLastZ 6FF8  
                    _ledBlink 71F8                      __ptext10 7042                      __ptext11 76A8  
                    __ptext20 72B2                      __ptext12 6FF8                      __ptext21 709C  
                    __ptext13 6FF0                      __ptext30 7012                      __ptext22 7078  
                    __ptext14 75DC                      __ptext31 70EA                      __ptext23 714E  
                    __ptext15 7872                      __ptext24 752E                      __ptext16 732A  
                    __ptext25 741A                      __ptext17 777E                      __ptext26 7B16  
                    __ptext18 749E                      __ptext27 6FE8                      __ptext19 796A  
                    __ptext28 6FE0                      __ptext29 70C2       __end_of_UART_Data_Ready 6FE8  
               __size_of_ceil 00F8                 __size_of_main 0060           _anyGestureAvailable 7B16  
                    _nextPage 71BE                      _prevPage 7186           __end_of_pwm_config_ 7078  
       __CFG_CPUDIV$OSC1_PLL2 000000          ?_anyGestureAvailable 0001      anyGestureAvailable@data1 0003  
    anyGestureAvailable@data2 0005                  ?_decreasePWM 0001         ??_anyGestureAvailable 0007  
             _init_XZ_Gesture 6FDA                    _UART_Write 7012              ?_UART_Data_Ready 0001  
                 _pwm_config_ 7058  
